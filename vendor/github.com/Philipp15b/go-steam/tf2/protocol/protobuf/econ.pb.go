// Code generated by protoc-gen-go.
// source: econ_gcmessages.proto
// DO NOT EDIT!

package protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type EGCItemMsg int32

const (
	EGCItemMsg_k_EMsgGCBase                                   EGCItemMsg = 1000
	EGCItemMsg_k_EMsgGCSetSingleItemPosition                  EGCItemMsg = 1001
	EGCItemMsg_k_EMsgGCCraft                                  EGCItemMsg = 1002
	EGCItemMsg_k_EMsgGCCraftResponse                          EGCItemMsg = 1003
	EGCItemMsg_k_EMsgGCDelete                                 EGCItemMsg = 1004
	EGCItemMsg_k_EMsgGCVerifyCacheSubscription                EGCItemMsg = 1005
	EGCItemMsg_k_EMsgGCNameItem                               EGCItemMsg = 1006
	EGCItemMsg_k_EMsgGCUnlockCrate                            EGCItemMsg = 1007
	EGCItemMsg_k_EMsgGCUnlockCrateResponse                    EGCItemMsg = 1008
	EGCItemMsg_k_EMsgGCPaintItem                              EGCItemMsg = 1009
	EGCItemMsg_k_EMsgGCPaintItemResponse                      EGCItemMsg = 1010
	EGCItemMsg_k_EMsgGCGoldenWrenchBroadcast                  EGCItemMsg = 1011
	EGCItemMsg_k_EMsgGCMOTDRequest                            EGCItemMsg = 1012
	EGCItemMsg_k_EMsgGCMOTDRequestResponse                    EGCItemMsg = 1013
	EGCItemMsg_k_EMsgGCNameBaseItem                           EGCItemMsg = 1019
	EGCItemMsg_k_EMsgGCNameBaseItemResponse                   EGCItemMsg = 1020
	EGCItemMsg_k_EMsgGCRemoveSocketItem_DEPRECATED            EGCItemMsg = 1021
	EGCItemMsg_k_EMsgGCRemoveSocketItemResponse_DEPRECATED    EGCItemMsg = 1022
	EGCItemMsg_k_EMsgGCCustomizeItemTexture                   EGCItemMsg = 1023
	EGCItemMsg_k_EMsgGCCustomizeItemTextureResponse           EGCItemMsg = 1024
	EGCItemMsg_k_EMsgGCUseItemRequest                         EGCItemMsg = 1025
	EGCItemMsg_k_EMsgGCUseItemResponse                        EGCItemMsg = 1026
	EGCItemMsg_k_EMsgGCRespawnPostLoadoutChange               EGCItemMsg = 1029
	EGCItemMsg_k_EMsgGCRemoveItemName                         EGCItemMsg = 1030
	EGCItemMsg_k_EMsgGCRemoveItemPaint                        EGCItemMsg = 1031
	EGCItemMsg_k_EMsgGCGiftWrapItem                           EGCItemMsg = 1032
	EGCItemMsg_k_EMsgGCGiftWrapItemResponse                   EGCItemMsg = 1033
	EGCItemMsg_k_EMsgGCDeliverGift                            EGCItemMsg = 1034
	EGCItemMsg_k_EMsgGCDeliverGiftResponseReceiver            EGCItemMsg = 1036
	EGCItemMsg_k_EMsgGCUnwrapGiftRequest                      EGCItemMsg = 1037
	EGCItemMsg_k_EMsgGCUnwrapGiftResponse                     EGCItemMsg = 1038
	EGCItemMsg_k_EMsgGCSetItemStyle                           EGCItemMsg = 1039
	EGCItemMsg_k_EMsgGCUsedClaimCodeItem                      EGCItemMsg = 1040
	EGCItemMsg_k_EMsgGCSortItems                              EGCItemMsg = 1041
	EGCItemMsg_k_EMsgGC_RevolvingLootList_DEPRECATED          EGCItemMsg = 1042
	EGCItemMsg_k_EMsgGCLookupAccount                          EGCItemMsg = 1043
	EGCItemMsg_k_EMsgGCLookupAccountResponse                  EGCItemMsg = 1044
	EGCItemMsg_k_EMsgGCLookupAccountName                      EGCItemMsg = 1045
	EGCItemMsg_k_EMsgGCLookupAccountNameResponse              EGCItemMsg = 1046
	EGCItemMsg_k_EMsgGCUpdateItemSchema                       EGCItemMsg = 1049
	EGCItemMsg_k_EMsgGCRequestInventoryRefresh                EGCItemMsg = 1050
	EGCItemMsg_k_EMsgGCRemoveCustomTexture                    EGCItemMsg = 1051
	EGCItemMsg_k_EMsgGCRemoveCustomTextureResponse            EGCItemMsg = 1052
	EGCItemMsg_k_EMsgGCRemoveMakersMark                       EGCItemMsg = 1053
	EGCItemMsg_k_EMsgGCRemoveMakersMarkResponse               EGCItemMsg = 1054
	EGCItemMsg_k_EMsgGCRemoveUniqueCraftIndex                 EGCItemMsg = 1055
	EGCItemMsg_k_EMsgGCRemoveUniqueCraftIndexResponse         EGCItemMsg = 1056
	EGCItemMsg_k_EMsgGCSaxxyBroadcast                         EGCItemMsg = 1057
	EGCItemMsg_k_EMsgGCBackpackSortFinished                   EGCItemMsg = 1058
	EGCItemMsg_k_EMsgGCAdjustItemEquippedState                EGCItemMsg = 1059
	EGCItemMsg_k_EMsgGCCollectItem                            EGCItemMsg = 1061
	EGCItemMsg_k_EMsgGCItemAcknowledged                       EGCItemMsg = 1062
	EGCItemMsg_k_EMsgGCPresets_SelectPresetForClass           EGCItemMsg = 1063
	EGCItemMsg_k_EMsgGCPresets_SetItemPosition                EGCItemMsg = 1064
	EGCItemMsg_k_EMsgGC_ReportAbuse                           EGCItemMsg = 1065
	EGCItemMsg_k_EMsgGC_ReportAbuseResponse                   EGCItemMsg = 1066
	EGCItemMsg_k_EMsgGCPresets_SelectPresetForClassReply      EGCItemMsg = 1067
	EGCItemMsg_k_EMsgGCNameItemNotification                   EGCItemMsg = 1068
	EGCItemMsg_k_EMsgGCClientDisplayNotification              EGCItemMsg = 1069
	EGCItemMsg_k_EMsgGCApplyStrangePart                       EGCItemMsg = 1070
	EGCItemMsg_k_EMsgGC_IncrementKillCountAttribute           EGCItemMsg = 1071
	EGCItemMsg_k_EMsgGC_IncrementKillCountResponse            EGCItemMsg = 1072
	EGCItemMsg_k_EMsgGCRemoveStrangePart                      EGCItemMsg = 1073
	EGCItemMsg_k_EMsgGCResetStrangeScores                     EGCItemMsg = 1074
	EGCItemMsg_k_EMsgGCGiftedItems                            EGCItemMsg = 1075
	EGCItemMsg_k_EMsgGCApplyUpgradeCard                       EGCItemMsg = 1077
	EGCItemMsg_k_EMsgGCRemoveUpgradeCard                      EGCItemMsg = 1078
	EGCItemMsg_k_EMsgGCApplyStrangeRestriction                EGCItemMsg = 1079
	EGCItemMsg_k_EMsgGCClientRequestMarketData                EGCItemMsg = 1080
	EGCItemMsg_k_EMsgGCClientRequestMarketDataResponse        EGCItemMsg = 1081
	EGCItemMsg_k_EMsgGCApplyXifier                            EGCItemMsg = 1082
	EGCItemMsg_k_EMsgGCApplyXifierResponse                    EGCItemMsg = 1083
	EGCItemMsg_k_EMsgGC_TrackUniquePlayerPairEvent            EGCItemMsg = 1084
	EGCItemMsg_k_EMsgGCFulfillDynamicRecipeComponent          EGCItemMsg = 1085
	EGCItemMsg_k_EMsgGCFulfillDynamicRecipeComponentResponse  EGCItemMsg = 1086
	EGCItemMsg_k_EMsgGCSetItemEffectVerticalOffset            EGCItemMsg = 1087
	EGCItemMsg_k_EMsgGCSetHatEffectUseHeadOrigin              EGCItemMsg = 1088
	EGCItemMsg_k_EMsgGCItemEaterRecharger                     EGCItemMsg = 1089
	EGCItemMsg_k_EMsgGCItemEaterRechargerResponse             EGCItemMsg = 1090
	EGCItemMsg_k_EMsgGCApplyBaseItemXifier                    EGCItemMsg = 1091
	EGCItemMsg_k_EMsgGCApplyClassTransmogrifier               EGCItemMsg = 1092
	EGCItemMsg_k_EMsgGCApplyHalloweenSpellbookPage            EGCItemMsg = 1093
	EGCItemMsg_k_EMsgGCRemoveKillStreak                       EGCItemMsg = 1094
	EGCItemMsg_k_EMsgGCRemoveKillStreakResponse               EGCItemMsg = 1095
	EGCItemMsg_k_EMsgGCTFSpecificItemBroadcast                EGCItemMsg = 1096
	EGCItemMsg_k_EMsgGC_IncrementKillCountAttribute_Multiple  EGCItemMsg = 1097
	EGCItemMsg_k_EMsgGCDeliverGiftResponseGiver               EGCItemMsg = 1098
	EGCItemMsg_k_EMsgGCSetItemPositions                       EGCItemMsg = 1100
	EGCItemMsg_k_EMsgGCLookupMultipleAccountNames             EGCItemMsg = 1101
	EGCItemMsg_k_EMsgGCLookupMultipleAccountNamesResponse     EGCItemMsg = 1102
	EGCItemMsg_k_EMsgGCTradingBase                            EGCItemMsg = 1500
	EGCItemMsg_k_EMsgGCTrading_InitiateTradeRequest           EGCItemMsg = 1501
	EGCItemMsg_k_EMsgGCTrading_InitiateTradeResponse          EGCItemMsg = 1502
	EGCItemMsg_k_EMsgGCTrading_StartSession                   EGCItemMsg = 1503
	EGCItemMsg_k_EMsgGCTrading_SessionClosed                  EGCItemMsg = 1509
	EGCItemMsg_k_EMsgGCTrading_CancelSession                  EGCItemMsg = 1510
	EGCItemMsg_k_EMsgGCTrading_InitiateTradeRequestResponse   EGCItemMsg = 1514
	EGCItemMsg_k_EMsgGCServerBrowser_FavoriteServer           EGCItemMsg = 1601
	EGCItemMsg_k_EMsgGCServerBrowser_BlacklistServer          EGCItemMsg = 1602
	EGCItemMsg_k_EMsgGCServerRentalsBase                      EGCItemMsg = 1700
	EGCItemMsg_k_EMsgGCItemPreviewCheckStatus                 EGCItemMsg = 1701
	EGCItemMsg_k_EMsgGCItemPreviewStatusResponse              EGCItemMsg = 1702
	EGCItemMsg_k_EMsgGCItemPreviewRequest                     EGCItemMsg = 1703
	EGCItemMsg_k_EMsgGCItemPreviewRequestResponse             EGCItemMsg = 1704
	EGCItemMsg_k_EMsgGCItemPreviewExpire                      EGCItemMsg = 1705
	EGCItemMsg_k_EMsgGCItemPreviewExpireNotification          EGCItemMsg = 1706
	EGCItemMsg_k_EMsgGCItemPreviewItemBoughtNotification      EGCItemMsg = 1708
	EGCItemMsg_k_EMsgGCDev_NewItemRequest                     EGCItemMsg = 2001
	EGCItemMsg_k_EMsgGCDev_NewItemRequestResponse             EGCItemMsg = 2002
	EGCItemMsg_k_EMsgGCDev_DebugRollLootRequest               EGCItemMsg = 2003
	EGCItemMsg_k_EMsgGCStoreGetUserData                       EGCItemMsg = 2500
	EGCItemMsg_k_EMsgGCStoreGetUserDataResponse               EGCItemMsg = 2501
	EGCItemMsg_k_EMsgGCStorePurchaseInit_DEPRECATED           EGCItemMsg = 2502
	EGCItemMsg_k_EMsgGCStorePurchaseInitResponse_DEPRECATED   EGCItemMsg = 2503
	EGCItemMsg_k_EMsgGCStorePurchaseFinalize                  EGCItemMsg = 2512
	EGCItemMsg_k_EMsgGCStorePurchaseFinalizeResponse          EGCItemMsg = 2513
	EGCItemMsg_k_EMsgGCStorePurchaseCancel                    EGCItemMsg = 2514
	EGCItemMsg_k_EMsgGCStorePurchaseCancelResponse            EGCItemMsg = 2515
	EGCItemMsg_k_EMsgGCStorePurchaseQueryTxn                  EGCItemMsg = 2508
	EGCItemMsg_k_EMsgGCStorePurchaseQueryTxnResponse          EGCItemMsg = 2509
	EGCItemMsg_k_EMsgGCStorePurchaseInit                      EGCItemMsg = 2510
	EGCItemMsg_k_EMsgGCStorePurchaseInitResponse              EGCItemMsg = 2511
	EGCItemMsg_k_EMsgGCToGCDirtySDOCache                      EGCItemMsg = 2516
	EGCItemMsg_k_EMsgGCToGCDirtyMultipleSDOCache              EGCItemMsg = 2517
	EGCItemMsg_k_EMsgGCToGCUpdateSQLKeyValue                  EGCItemMsg = 2518
	EGCItemMsg_k_EMsgGCToGCBroadcastConsoleCommand            EGCItemMsg = 2521
	EGCItemMsg_k_EMsgGCServerVersionUpdated                   EGCItemMsg = 2522
	EGCItemMsg_k_EMsgGCApplyAutograph                         EGCItemMsg = 2523
	EGCItemMsg_k_EMsgGCToGCWebAPIAccountChanged               EGCItemMsg = 2524
	EGCItemMsg_k_EMsgGCRequestAnnouncements                   EGCItemMsg = 2525
	EGCItemMsg_k_EMsgGCRequestAnnouncementsResponse           EGCItemMsg = 2526
	EGCItemMsg_k_EMsgGCRequestPassportItemGrant               EGCItemMsg = 2527
	EGCItemMsg_k_EMsgGCClientVersionUpdated                   EGCItemMsg = 2528
	EGCItemMsg_k_EMsgGCItemPurgatory_FinalizePurchase         EGCItemMsg = 2531
	EGCItemMsg_k_EMsgGCItemPurgatory_FinalizePurchaseResponse EGCItemMsg = 2532
	EGCItemMsg_k_EMsgGCItemPurgatory_RefundPurchase           EGCItemMsg = 2533
	EGCItemMsg_k_EMsgGCItemPurgatory_RefundPurchaseResponse   EGCItemMsg = 2534
	EGCItemMsg_k_EMsgGCToGCPlayerStrangeCountAdjustments      EGCItemMsg = 2535
	EGCItemMsg_k_EMsgGCRequestStoreSalesData                  EGCItemMsg = 2536
	EGCItemMsg_k_EMsgGCRequestStoreSalesDataResponse          EGCItemMsg = 2537
	EGCItemMsg_k_EMsgGCRequestStoreSalesDataUpToDateResponse  EGCItemMsg = 2538
	EGCItemMsg_k_EMsgGCToGCPingRequest                        EGCItemMsg = 2539
	EGCItemMsg_k_EMsgGCToGCPingResponse                       EGCItemMsg = 2540
	EGCItemMsg_k_EMsgGCToGCGetUserSessionServer               EGCItemMsg = 2541
	EGCItemMsg_k_EMsgGCToGCGetUserSessionServerResponse       EGCItemMsg = 2542
	EGCItemMsg_k_EMsgGCToGCGetUserServerMembers               EGCItemMsg = 2543
	EGCItemMsg_k_EMsgGCToGCGetUserServerMembersResponse       EGCItemMsg = 2544
	EGCItemMsg_k_EMsgGCToGCGrantSelfMadeItemToAccount         EGCItemMsg = 2555
	EGCItemMsg_k_EMsgGCToGCThankedByNewUser                   EGCItemMsg = 2556
	EGCItemMsg_k_EMsgGCShuffleCrateContents                   EGCItemMsg = 2557
	EGCItemMsg_k_EMsgGCQuestObjective_Progress                EGCItemMsg = 2558
	EGCItemMsg_k_EMsgGCQuestCompleted                         EGCItemMsg = 2559
	EGCItemMsg_k_EMsgGCApplyDuckToken                         EGCItemMsg = 2560
	EGCItemMsg_k_EMsgGCQuestComplete_Request                  EGCItemMsg = 2561
	EGCItemMsg_k_EMsgGCQuestObjective_PointsChange            EGCItemMsg = 2562
	EGCItemMsg_k_EMsgGCQuestObjective_PointsChangeResponse    EGCItemMsg = 2563
	EGCItemMsg_k_EMsgGCQuestObjective_RequestLoanerItems      EGCItemMsg = 2564
	EGCItemMsg_k_EMsgGCQuestObjective_RequestLoanerResponse   EGCItemMsg = 2565
	EGCItemMsg_k_EMsgGCApplyStrangeCountTransfer              EGCItemMsg = 2566
	EGCItemMsg_k_EMsgGCCraftCollectionUpgrade                 EGCItemMsg = 2567
	EGCItemMsg_k_EMsgGCCraftHalloweenOffering                 EGCItemMsg = 2568
	EGCItemMsg_k_EMsgGCQuestDiscard_Request                   EGCItemMsg = 2569
	EGCItemMsg_k_EMsgGCRemoveGiftedBy                         EGCItemMsg = 2570
	EGCItemMsg_k_EMsgGCRemoveGiftedByResponse                 EGCItemMsg = 2571
)

var EGCItemMsg_name = map[int32]string{
	1000: "k_EMsgGCBase",
	1001: "k_EMsgGCSetSingleItemPosition",
	1002: "k_EMsgGCCraft",
	1003: "k_EMsgGCCraftResponse",
	1004: "k_EMsgGCDelete",
	1005: "k_EMsgGCVerifyCacheSubscription",
	1006: "k_EMsgGCNameItem",
	1007: "k_EMsgGCUnlockCrate",
	1008: "k_EMsgGCUnlockCrateResponse",
	1009: "k_EMsgGCPaintItem",
	1010: "k_EMsgGCPaintItemResponse",
	1011: "k_EMsgGCGoldenWrenchBroadcast",
	1012: "k_EMsgGCMOTDRequest",
	1013: "k_EMsgGCMOTDRequestResponse",
	1019: "k_EMsgGCNameBaseItem",
	1020: "k_EMsgGCNameBaseItemResponse",
	1021: "k_EMsgGCRemoveSocketItem_DEPRECATED",
	1022: "k_EMsgGCRemoveSocketItemResponse_DEPRECATED",
	1023: "k_EMsgGCCustomizeItemTexture",
	1024: "k_EMsgGCCustomizeItemTextureResponse",
	1025: "k_EMsgGCUseItemRequest",
	1026: "k_EMsgGCUseItemResponse",
	1029: "k_EMsgGCRespawnPostLoadoutChange",
	1030: "k_EMsgGCRemoveItemName",
	1031: "k_EMsgGCRemoveItemPaint",
	1032: "k_EMsgGCGiftWrapItem",
	1033: "k_EMsgGCGiftWrapItemResponse",
	1034: "k_EMsgGCDeliverGift",
	1036: "k_EMsgGCDeliverGiftResponseReceiver",
	1037: "k_EMsgGCUnwrapGiftRequest",
	1038: "k_EMsgGCUnwrapGiftResponse",
	1039: "k_EMsgGCSetItemStyle",
	1040: "k_EMsgGCUsedClaimCodeItem",
	1041: "k_EMsgGCSortItems",
	1042: "k_EMsgGC_RevolvingLootList_DEPRECATED",
	1043: "k_EMsgGCLookupAccount",
	1044: "k_EMsgGCLookupAccountResponse",
	1045: "k_EMsgGCLookupAccountName",
	1046: "k_EMsgGCLookupAccountNameResponse",
	1049: "k_EMsgGCUpdateItemSchema",
	1050: "k_EMsgGCRequestInventoryRefresh",
	1051: "k_EMsgGCRemoveCustomTexture",
	1052: "k_EMsgGCRemoveCustomTextureResponse",
	1053: "k_EMsgGCRemoveMakersMark",
	1054: "k_EMsgGCRemoveMakersMarkResponse",
	1055: "k_EMsgGCRemoveUniqueCraftIndex",
	1056: "k_EMsgGCRemoveUniqueCraftIndexResponse",
	1057: "k_EMsgGCSaxxyBroadcast",
	1058: "k_EMsgGCBackpackSortFinished",
	1059: "k_EMsgGCAdjustItemEquippedState",
	1061: "k_EMsgGCCollectItem",
	1062: "k_EMsgGCItemAcknowledged",
	1063: "k_EMsgGCPresets_SelectPresetForClass",
	1064: "k_EMsgGCPresets_SetItemPosition",
	1065: "k_EMsgGC_ReportAbuse",
	1066: "k_EMsgGC_ReportAbuseResponse",
	1067: "k_EMsgGCPresets_SelectPresetForClassReply",
	1068: "k_EMsgGCNameItemNotification",
	1069: "k_EMsgGCClientDisplayNotification",
	1070: "k_EMsgGCApplyStrangePart",
	1071: "k_EMsgGC_IncrementKillCountAttribute",
	1072: "k_EMsgGC_IncrementKillCountResponse",
	1073: "k_EMsgGCRemoveStrangePart",
	1074: "k_EMsgGCResetStrangeScores",
	1075: "k_EMsgGCGiftedItems",
	1077: "k_EMsgGCApplyUpgradeCard",
	1078: "k_EMsgGCRemoveUpgradeCard",
	1079: "k_EMsgGCApplyStrangeRestriction",
	1080: "k_EMsgGCClientRequestMarketData",
	1081: "k_EMsgGCClientRequestMarketDataResponse",
	1082: "k_EMsgGCApplyXifier",
	1083: "k_EMsgGCApplyXifierResponse",
	1084: "k_EMsgGC_TrackUniquePlayerPairEvent",
	1085: "k_EMsgGCFulfillDynamicRecipeComponent",
	1086: "k_EMsgGCFulfillDynamicRecipeComponentResponse",
	1087: "k_EMsgGCSetItemEffectVerticalOffset",
	1088: "k_EMsgGCSetHatEffectUseHeadOrigin",
	1089: "k_EMsgGCItemEaterRecharger",
	1090: "k_EMsgGCItemEaterRechargerResponse",
	1091: "k_EMsgGCApplyBaseItemXifier",
	1092: "k_EMsgGCApplyClassTransmogrifier",
	1093: "k_EMsgGCApplyHalloweenSpellbookPage",
	1094: "k_EMsgGCRemoveKillStreak",
	1095: "k_EMsgGCRemoveKillStreakResponse",
	1096: "k_EMsgGCTFSpecificItemBroadcast",
	1097: "k_EMsgGC_IncrementKillCountAttribute_Multiple",
	1098: "k_EMsgGCDeliverGiftResponseGiver",
	1100: "k_EMsgGCSetItemPositions",
	1101: "k_EMsgGCLookupMultipleAccountNames",
	1102: "k_EMsgGCLookupMultipleAccountNamesResponse",
	1500: "k_EMsgGCTradingBase",
	1501: "k_EMsgGCTrading_InitiateTradeRequest",
	1502: "k_EMsgGCTrading_InitiateTradeResponse",
	1503: "k_EMsgGCTrading_StartSession",
	1509: "k_EMsgGCTrading_SessionClosed",
	1510: "k_EMsgGCTrading_CancelSession",
	1514: "k_EMsgGCTrading_InitiateTradeRequestResponse",
	1601: "k_EMsgGCServerBrowser_FavoriteServer",
	1602: "k_EMsgGCServerBrowser_BlacklistServer",
	1700: "k_EMsgGCServerRentalsBase",
	1701: "k_EMsgGCItemPreviewCheckStatus",
	1702: "k_EMsgGCItemPreviewStatusResponse",
	1703: "k_EMsgGCItemPreviewRequest",
	1704: "k_EMsgGCItemPreviewRequestResponse",
	1705: "k_EMsgGCItemPreviewExpire",
	1706: "k_EMsgGCItemPreviewExpireNotification",
	1708: "k_EMsgGCItemPreviewItemBoughtNotification",
	2001: "k_EMsgGCDev_NewItemRequest",
	2002: "k_EMsgGCDev_NewItemRequestResponse",
	2003: "k_EMsgGCDev_DebugRollLootRequest",
	2500: "k_EMsgGCStoreGetUserData",
	2501: "k_EMsgGCStoreGetUserDataResponse",
	2502: "k_EMsgGCStorePurchaseInit_DEPRECATED",
	2503: "k_EMsgGCStorePurchaseInitResponse_DEPRECATED",
	2512: "k_EMsgGCStorePurchaseFinalize",
	2513: "k_EMsgGCStorePurchaseFinalizeResponse",
	2514: "k_EMsgGCStorePurchaseCancel",
	2515: "k_EMsgGCStorePurchaseCancelResponse",
	2508: "k_EMsgGCStorePurchaseQueryTxn",
	2509: "k_EMsgGCStorePurchaseQueryTxnResponse",
	2510: "k_EMsgGCStorePurchaseInit",
	2511: "k_EMsgGCStorePurchaseInitResponse",
	2516: "k_EMsgGCToGCDirtySDOCache",
	2517: "k_EMsgGCToGCDirtyMultipleSDOCache",
	2518: "k_EMsgGCToGCUpdateSQLKeyValue",
	2521: "k_EMsgGCToGCBroadcastConsoleCommand",
	2522: "k_EMsgGCServerVersionUpdated",
	2523: "k_EMsgGCApplyAutograph",
	2524: "k_EMsgGCToGCWebAPIAccountChanged",
	2525: "k_EMsgGCRequestAnnouncements",
	2526: "k_EMsgGCRequestAnnouncementsResponse",
	2527: "k_EMsgGCRequestPassportItemGrant",
	2528: "k_EMsgGCClientVersionUpdated",
	2531: "k_EMsgGCItemPurgatory_FinalizePurchase",
	2532: "k_EMsgGCItemPurgatory_FinalizePurchaseResponse",
	2533: "k_EMsgGCItemPurgatory_RefundPurchase",
	2534: "k_EMsgGCItemPurgatory_RefundPurchaseResponse",
	2535: "k_EMsgGCToGCPlayerStrangeCountAdjustments",
	2536: "k_EMsgGCRequestStoreSalesData",
	2537: "k_EMsgGCRequestStoreSalesDataResponse",
	2538: "k_EMsgGCRequestStoreSalesDataUpToDateResponse",
	2539: "k_EMsgGCToGCPingRequest",
	2540: "k_EMsgGCToGCPingResponse",
	2541: "k_EMsgGCToGCGetUserSessionServer",
	2542: "k_EMsgGCToGCGetUserSessionServerResponse",
	2543: "k_EMsgGCToGCGetUserServerMembers",
	2544: "k_EMsgGCToGCGetUserServerMembersResponse",
	2555: "k_EMsgGCToGCGrantSelfMadeItemToAccount",
	2556: "k_EMsgGCToGCThankedByNewUser",
	2557: "k_EMsgGCShuffleCrateContents",
	2558: "k_EMsgGCQuestObjective_Progress",
	2559: "k_EMsgGCQuestCompleted",
	2560: "k_EMsgGCApplyDuckToken",
	2561: "k_EMsgGCQuestComplete_Request",
	2562: "k_EMsgGCQuestObjective_PointsChange",
	2563: "k_EMsgGCQuestObjective_PointsChangeResponse",
	2564: "k_EMsgGCQuestObjective_RequestLoanerItems",
	2565: "k_EMsgGCQuestObjective_RequestLoanerResponse",
	2566: "k_EMsgGCApplyStrangeCountTransfer",
	2567: "k_EMsgGCCraftCollectionUpgrade",
	2568: "k_EMsgGCCraftHalloweenOffering",
	2569: "k_EMsgGCQuestDiscard_Request",
	2570: "k_EMsgGCRemoveGiftedBy",
	2571: "k_EMsgGCRemoveGiftedByResponse",
}
var EGCItemMsg_value = map[string]int32{
	"k_EMsgGCBase":                                   1000,
	"k_EMsgGCSetSingleItemPosition":                  1001,
	"k_EMsgGCCraft":                                  1002,
	"k_EMsgGCCraftResponse":                          1003,
	"k_EMsgGCDelete":                                 1004,
	"k_EMsgGCVerifyCacheSubscription":                1005,
	"k_EMsgGCNameItem":                               1006,
	"k_EMsgGCUnlockCrate":                            1007,
	"k_EMsgGCUnlockCrateResponse":                    1008,
	"k_EMsgGCPaintItem":                              1009,
	"k_EMsgGCPaintItemResponse":                      1010,
	"k_EMsgGCGoldenWrenchBroadcast":                  1011,
	"k_EMsgGCMOTDRequest":                            1012,
	"k_EMsgGCMOTDRequestResponse":                    1013,
	"k_EMsgGCNameBaseItem":                           1019,
	"k_EMsgGCNameBaseItemResponse":                   1020,
	"k_EMsgGCRemoveSocketItem_DEPRECATED":            1021,
	"k_EMsgGCRemoveSocketItemResponse_DEPRECATED":    1022,
	"k_EMsgGCCustomizeItemTexture":                   1023,
	"k_EMsgGCCustomizeItemTextureResponse":           1024,
	"k_EMsgGCUseItemRequest":                         1025,
	"k_EMsgGCUseItemResponse":                        1026,
	"k_EMsgGCRespawnPostLoadoutChange":               1029,
	"k_EMsgGCRemoveItemName":                         1030,
	"k_EMsgGCRemoveItemPaint":                        1031,
	"k_EMsgGCGiftWrapItem":                           1032,
	"k_EMsgGCGiftWrapItemResponse":                   1033,
	"k_EMsgGCDeliverGift":                            1034,
	"k_EMsgGCDeliverGiftResponseReceiver":            1036,
	"k_EMsgGCUnwrapGiftRequest":                      1037,
	"k_EMsgGCUnwrapGiftResponse":                     1038,
	"k_EMsgGCSetItemStyle":                           1039,
	"k_EMsgGCUsedClaimCodeItem":                      1040,
	"k_EMsgGCSortItems":                              1041,
	"k_EMsgGC_RevolvingLootList_DEPRECATED":          1042,
	"k_EMsgGCLookupAccount":                          1043,
	"k_EMsgGCLookupAccountResponse":                  1044,
	"k_EMsgGCLookupAccountName":                      1045,
	"k_EMsgGCLookupAccountNameResponse":              1046,
	"k_EMsgGCUpdateItemSchema":                       1049,
	"k_EMsgGCRequestInventoryRefresh":                1050,
	"k_EMsgGCRemoveCustomTexture":                    1051,
	"k_EMsgGCRemoveCustomTextureResponse":            1052,
	"k_EMsgGCRemoveMakersMark":                       1053,
	"k_EMsgGCRemoveMakersMarkResponse":               1054,
	"k_EMsgGCRemoveUniqueCraftIndex":                 1055,
	"k_EMsgGCRemoveUniqueCraftIndexResponse":         1056,
	"k_EMsgGCSaxxyBroadcast":                         1057,
	"k_EMsgGCBackpackSortFinished":                   1058,
	"k_EMsgGCAdjustItemEquippedState":                1059,
	"k_EMsgGCCollectItem":                            1061,
	"k_EMsgGCItemAcknowledged":                       1062,
	"k_EMsgGCPresets_SelectPresetForClass":           1063,
	"k_EMsgGCPresets_SetItemPosition":                1064,
	"k_EMsgGC_ReportAbuse":                           1065,
	"k_EMsgGC_ReportAbuseResponse":                   1066,
	"k_EMsgGCPresets_SelectPresetForClassReply":      1067,
	"k_EMsgGCNameItemNotification":                   1068,
	"k_EMsgGCClientDisplayNotification":              1069,
	"k_EMsgGCApplyStrangePart":                       1070,
	"k_EMsgGC_IncrementKillCountAttribute":           1071,
	"k_EMsgGC_IncrementKillCountResponse":            1072,
	"k_EMsgGCRemoveStrangePart":                      1073,
	"k_EMsgGCResetStrangeScores":                     1074,
	"k_EMsgGCGiftedItems":                            1075,
	"k_EMsgGCApplyUpgradeCard":                       1077,
	"k_EMsgGCRemoveUpgradeCard":                      1078,
	"k_EMsgGCApplyStrangeRestriction":                1079,
	"k_EMsgGCClientRequestMarketData":                1080,
	"k_EMsgGCClientRequestMarketDataResponse":        1081,
	"k_EMsgGCApplyXifier":                            1082,
	"k_EMsgGCApplyXifierResponse":                    1083,
	"k_EMsgGC_TrackUniquePlayerPairEvent":            1084,
	"k_EMsgGCFulfillDynamicRecipeComponent":          1085,
	"k_EMsgGCFulfillDynamicRecipeComponentResponse":  1086,
	"k_EMsgGCSetItemEffectVerticalOffset":            1087,
	"k_EMsgGCSetHatEffectUseHeadOrigin":              1088,
	"k_EMsgGCItemEaterRecharger":                     1089,
	"k_EMsgGCItemEaterRechargerResponse":             1090,
	"k_EMsgGCApplyBaseItemXifier":                    1091,
	"k_EMsgGCApplyClassTransmogrifier":               1092,
	"k_EMsgGCApplyHalloweenSpellbookPage":            1093,
	"k_EMsgGCRemoveKillStreak":                       1094,
	"k_EMsgGCRemoveKillStreakResponse":               1095,
	"k_EMsgGCTFSpecificItemBroadcast":                1096,
	"k_EMsgGC_IncrementKillCountAttribute_Multiple":  1097,
	"k_EMsgGCDeliverGiftResponseGiver":               1098,
	"k_EMsgGCSetItemPositions":                       1100,
	"k_EMsgGCLookupMultipleAccountNames":             1101,
	"k_EMsgGCLookupMultipleAccountNamesResponse":     1102,
	"k_EMsgGCTradingBase":                            1500,
	"k_EMsgGCTrading_InitiateTradeRequest":           1501,
	"k_EMsgGCTrading_InitiateTradeResponse":          1502,
	"k_EMsgGCTrading_StartSession":                   1503,
	"k_EMsgGCTrading_SessionClosed":                  1509,
	"k_EMsgGCTrading_CancelSession":                  1510,
	"k_EMsgGCTrading_InitiateTradeRequestResponse":   1514,
	"k_EMsgGCServerBrowser_FavoriteServer":           1601,
	"k_EMsgGCServerBrowser_BlacklistServer":          1602,
	"k_EMsgGCServerRentalsBase":                      1700,
	"k_EMsgGCItemPreviewCheckStatus":                 1701,
	"k_EMsgGCItemPreviewStatusResponse":              1702,
	"k_EMsgGCItemPreviewRequest":                     1703,
	"k_EMsgGCItemPreviewRequestResponse":             1704,
	"k_EMsgGCItemPreviewExpire":                      1705,
	"k_EMsgGCItemPreviewExpireNotification":          1706,
	"k_EMsgGCItemPreviewItemBoughtNotification":      1708,
	"k_EMsgGCDev_NewItemRequest":                     2001,
	"k_EMsgGCDev_NewItemRequestResponse":             2002,
	"k_EMsgGCDev_DebugRollLootRequest":               2003,
	"k_EMsgGCStoreGetUserData":                       2500,
	"k_EMsgGCStoreGetUserDataResponse":               2501,
	"k_EMsgGCStorePurchaseInit_DEPRECATED":           2502,
	"k_EMsgGCStorePurchaseInitResponse_DEPRECATED":   2503,
	"k_EMsgGCStorePurchaseFinalize":                  2512,
	"k_EMsgGCStorePurchaseFinalizeResponse":          2513,
	"k_EMsgGCStorePurchaseCancel":                    2514,
	"k_EMsgGCStorePurchaseCancelResponse":            2515,
	"k_EMsgGCStorePurchaseQueryTxn":                  2508,
	"k_EMsgGCStorePurchaseQueryTxnResponse":          2509,
	"k_EMsgGCStorePurchaseInit":                      2510,
	"k_EMsgGCStorePurchaseInitResponse":              2511,
	"k_EMsgGCToGCDirtySDOCache":                      2516,
	"k_EMsgGCToGCDirtyMultipleSDOCache":              2517,
	"k_EMsgGCToGCUpdateSQLKeyValue":                  2518,
	"k_EMsgGCToGCBroadcastConsoleCommand":            2521,
	"k_EMsgGCServerVersionUpdated":                   2522,
	"k_EMsgGCApplyAutograph":                         2523,
	"k_EMsgGCToGCWebAPIAccountChanged":               2524,
	"k_EMsgGCRequestAnnouncements":                   2525,
	"k_EMsgGCRequestAnnouncementsResponse":           2526,
	"k_EMsgGCRequestPassportItemGrant":               2527,
	"k_EMsgGCClientVersionUpdated":                   2528,
	"k_EMsgGCItemPurgatory_FinalizePurchase":         2531,
	"k_EMsgGCItemPurgatory_FinalizePurchaseResponse": 2532,
	"k_EMsgGCItemPurgatory_RefundPurchase":           2533,
	"k_EMsgGCItemPurgatory_RefundPurchaseResponse":   2534,
	"k_EMsgGCToGCPlayerStrangeCountAdjustments":      2535,
	"k_EMsgGCRequestStoreSalesData":                  2536,
	"k_EMsgGCRequestStoreSalesDataResponse":          2537,
	"k_EMsgGCRequestStoreSalesDataUpToDateResponse":  2538,
	"k_EMsgGCToGCPingRequest":                        2539,
	"k_EMsgGCToGCPingResponse":                       2540,
	"k_EMsgGCToGCGetUserSessionServer":               2541,
	"k_EMsgGCToGCGetUserSessionServerResponse":       2542,
	"k_EMsgGCToGCGetUserServerMembers":               2543,
	"k_EMsgGCToGCGetUserServerMembersResponse":       2544,
	"k_EMsgGCToGCGrantSelfMadeItemToAccount":         2555,
	"k_EMsgGCToGCThankedByNewUser":                   2556,
	"k_EMsgGCShuffleCrateContents":                   2557,
	"k_EMsgGCQuestObjective_Progress":                2558,
	"k_EMsgGCQuestCompleted":                         2559,
	"k_EMsgGCApplyDuckToken":                         2560,
	"k_EMsgGCQuestComplete_Request":                  2561,
	"k_EMsgGCQuestObjective_PointsChange":            2562,
	"k_EMsgGCQuestObjective_PointsChangeResponse":    2563,
	"k_EMsgGCQuestObjective_RequestLoanerItems":      2564,
	"k_EMsgGCQuestObjective_RequestLoanerResponse":   2565,
	"k_EMsgGCApplyStrangeCountTransfer":              2566,
	"k_EMsgGCCraftCollectionUpgrade":                 2567,
	"k_EMsgGCCraftHalloweenOffering":                 2568,
	"k_EMsgGCQuestDiscard_Request":                   2569,
	"k_EMsgGCRemoveGiftedBy":                         2570,
	"k_EMsgGCRemoveGiftedByResponse":                 2571,
}

func (x EGCItemMsg) Enum() *EGCItemMsg {
	p := new(EGCItemMsg)
	*p = x
	return p
}
func (x EGCItemMsg) String() string {
	return proto.EnumName(EGCItemMsg_name, int32(x))
}
func (x *EGCItemMsg) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EGCItemMsg_value, data, "EGCItemMsg")
	if err != nil {
		return err
	}
	*x = EGCItemMsg(value)
	return nil
}
func (EGCItemMsg) EnumDescriptor() ([]byte, []int) { return econ_fileDescriptor0, []int{0} }

type EGCMsgResponse int32

const (
	EGCMsgResponse_k_EGCMsgResponseOK           EGCMsgResponse = 0
	EGCMsgResponse_k_EGCMsgResponseDenied       EGCMsgResponse = 1
	EGCMsgResponse_k_EGCMsgResponseServerError  EGCMsgResponse = 2
	EGCMsgResponse_k_EGCMsgResponseTimeout      EGCMsgResponse = 3
	EGCMsgResponse_k_EGCMsgResponseInvalid      EGCMsgResponse = 4
	EGCMsgResponse_k_EGCMsgResponseNoMatch      EGCMsgResponse = 5
	EGCMsgResponse_k_EGCMsgResponseUnknownError EGCMsgResponse = 6
	EGCMsgResponse_k_EGCMsgResponseNotLoggedOn  EGCMsgResponse = 7
	EGCMsgResponse_k_EGCMsgFailedToCreate       EGCMsgResponse = 8
)

var EGCMsgResponse_name = map[int32]string{
	0: "k_EGCMsgResponseOK",
	1: "k_EGCMsgResponseDenied",
	2: "k_EGCMsgResponseServerError",
	3: "k_EGCMsgResponseTimeout",
	4: "k_EGCMsgResponseInvalid",
	5: "k_EGCMsgResponseNoMatch",
	6: "k_EGCMsgResponseUnknownError",
	7: "k_EGCMsgResponseNotLoggedOn",
	8: "k_EGCMsgFailedToCreate",
}
var EGCMsgResponse_value = map[string]int32{
	"k_EGCMsgResponseOK":           0,
	"k_EGCMsgResponseDenied":       1,
	"k_EGCMsgResponseServerError":  2,
	"k_EGCMsgResponseTimeout":      3,
	"k_EGCMsgResponseInvalid":      4,
	"k_EGCMsgResponseNoMatch":      5,
	"k_EGCMsgResponseUnknownError": 6,
	"k_EGCMsgResponseNotLoggedOn":  7,
	"k_EGCMsgFailedToCreate":       8,
}

func (x EGCMsgResponse) Enum() *EGCMsgResponse {
	p := new(EGCMsgResponse)
	*p = x
	return p
}
func (x EGCMsgResponse) String() string {
	return proto.EnumName(EGCMsgResponse_name, int32(x))
}
func (x *EGCMsgResponse) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EGCMsgResponse_value, data, "EGCMsgResponse")
	if err != nil {
		return err
	}
	*x = EGCMsgResponse(value)
	return nil
}
func (EGCMsgResponse) EnumDescriptor() ([]byte, []int) { return econ_fileDescriptor0, []int{1} }

type EUnlockStyle int32

const (
	EUnlockStyle_k_UnlockStyle_Succeeded               EUnlockStyle = 0
	EUnlockStyle_k_UnlockStyle_Failed_PreReq           EUnlockStyle = 1
	EUnlockStyle_k_UnlockStyle_Failed_CantAfford       EUnlockStyle = 2
	EUnlockStyle_k_UnlockStyle_Failed_CantCommit       EUnlockStyle = 3
	EUnlockStyle_k_UnlockStyle_Failed_CantLockCache    EUnlockStyle = 4
	EUnlockStyle_k_UnlockStyle_Failed_CantAffordAttrib EUnlockStyle = 5
	EUnlockStyle_k_UnlockStyle_Failed_CantAffordGem    EUnlockStyle = 6
)

var EUnlockStyle_name = map[int32]string{
	0: "k_UnlockStyle_Succeeded",
	1: "k_UnlockStyle_Failed_PreReq",
	2: "k_UnlockStyle_Failed_CantAfford",
	3: "k_UnlockStyle_Failed_CantCommit",
	4: "k_UnlockStyle_Failed_CantLockCache",
	5: "k_UnlockStyle_Failed_CantAffordAttrib",
	6: "k_UnlockStyle_Failed_CantAffordGem",
}
var EUnlockStyle_value = map[string]int32{
	"k_UnlockStyle_Succeeded":               0,
	"k_UnlockStyle_Failed_PreReq":           1,
	"k_UnlockStyle_Failed_CantAfford":       2,
	"k_UnlockStyle_Failed_CantCommit":       3,
	"k_UnlockStyle_Failed_CantLockCache":    4,
	"k_UnlockStyle_Failed_CantAffordAttrib": 5,
	"k_UnlockStyle_Failed_CantAffordGem":    6,
}

func (x EUnlockStyle) Enum() *EUnlockStyle {
	p := new(EUnlockStyle)
	*p = x
	return p
}
func (x EUnlockStyle) String() string {
	return proto.EnumName(EUnlockStyle_name, int32(x))
}
func (x *EUnlockStyle) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EUnlockStyle_value, data, "EUnlockStyle")
	if err != nil {
		return err
	}
	*x = EUnlockStyle(value)
	return nil
}
func (EUnlockStyle) EnumDescriptor() ([]byte, []int) { return econ_fileDescriptor0, []int{2} }

type EItemPurgatoryResponse_Finalize int32

const (
	EItemPurgatoryResponse_Finalize_k_ItemPurgatoryResponse_Finalize_Succeeded                  EItemPurgatoryResponse_Finalize = 0
	EItemPurgatoryResponse_Finalize_k_ItemPurgatoryResponse_Finalize_Failed_Incomplete          EItemPurgatoryResponse_Finalize = 1
	EItemPurgatoryResponse_Finalize_k_ItemPurgatoryResponse_Finalize_Failed_ItemsNotInPurgatory EItemPurgatoryResponse_Finalize = 2
	EItemPurgatoryResponse_Finalize_k_ItemPurgatoryResponse_Finalize_Failed_CouldNotFindItems   EItemPurgatoryResponse_Finalize = 3
	EItemPurgatoryResponse_Finalize_k_ItemPurgatoryResponse_Finalize_Failed_NoSOCache           EItemPurgatoryResponse_Finalize = 4
	EItemPurgatoryResponse_Finalize_k_ItemPurgatoryResponse_Finalize_BackpackFull               EItemPurgatoryResponse_Finalize = 5
)

var EItemPurgatoryResponse_Finalize_name = map[int32]string{
	0: "k_ItemPurgatoryResponse_Finalize_Succeeded",
	1: "k_ItemPurgatoryResponse_Finalize_Failed_Incomplete",
	2: "k_ItemPurgatoryResponse_Finalize_Failed_ItemsNotInPurgatory",
	3: "k_ItemPurgatoryResponse_Finalize_Failed_CouldNotFindItems",
	4: "k_ItemPurgatoryResponse_Finalize_Failed_NoSOCache",
	5: "k_ItemPurgatoryResponse_Finalize_BackpackFull",
}
var EItemPurgatoryResponse_Finalize_value = map[string]int32{
	"k_ItemPurgatoryResponse_Finalize_Succeeded":                  0,
	"k_ItemPurgatoryResponse_Finalize_Failed_Incomplete":          1,
	"k_ItemPurgatoryResponse_Finalize_Failed_ItemsNotInPurgatory": 2,
	"k_ItemPurgatoryResponse_Finalize_Failed_CouldNotFindItems":   3,
	"k_ItemPurgatoryResponse_Finalize_Failed_NoSOCache":           4,
	"k_ItemPurgatoryResponse_Finalize_BackpackFull":               5,
}

func (x EItemPurgatoryResponse_Finalize) Enum() *EItemPurgatoryResponse_Finalize {
	p := new(EItemPurgatoryResponse_Finalize)
	*p = x
	return p
}
func (x EItemPurgatoryResponse_Finalize) String() string {
	return proto.EnumName(EItemPurgatoryResponse_Finalize_name, int32(x))
}
func (x *EItemPurgatoryResponse_Finalize) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EItemPurgatoryResponse_Finalize_value, data, "EItemPurgatoryResponse_Finalize")
	if err != nil {
		return err
	}
	*x = EItemPurgatoryResponse_Finalize(value)
	return nil
}
func (EItemPurgatoryResponse_Finalize) EnumDescriptor() ([]byte, []int) {
	return econ_fileDescriptor0, []int{3}
}

type EItemPurgatoryResponse_Refund int32

const (
	EItemPurgatoryResponse_Refund_k_ItemPurgatoryResponse_Refund_Succeeded                 EItemPurgatoryResponse_Refund = 0
	EItemPurgatoryResponse_Refund_k_ItemPurgatoryResponse_Refund_Failed_ItemNotInPurgatory EItemPurgatoryResponse_Refund = 1
	EItemPurgatoryResponse_Refund_k_ItemPurgatoryResponse_Refund_Failed_CouldNotFindItem   EItemPurgatoryResponse_Refund = 2
	EItemPurgatoryResponse_Refund_k_ItemPurgatoryResponse_Refund_Failed_NoSOCache          EItemPurgatoryResponse_Refund = 3
	EItemPurgatoryResponse_Refund_k_ItemPurgatoryResponse_Refund_Failed_NoDetail           EItemPurgatoryResponse_Refund = 4
	EItemPurgatoryResponse_Refund_k_ItemPurgatoryResponse_Refund_Failed_NexonWebAPI        EItemPurgatoryResponse_Refund = 5
)

var EItemPurgatoryResponse_Refund_name = map[int32]string{
	0: "k_ItemPurgatoryResponse_Refund_Succeeded",
	1: "k_ItemPurgatoryResponse_Refund_Failed_ItemNotInPurgatory",
	2: "k_ItemPurgatoryResponse_Refund_Failed_CouldNotFindItem",
	3: "k_ItemPurgatoryResponse_Refund_Failed_NoSOCache",
	4: "k_ItemPurgatoryResponse_Refund_Failed_NoDetail",
	5: "k_ItemPurgatoryResponse_Refund_Failed_NexonWebAPI",
}
var EItemPurgatoryResponse_Refund_value = map[string]int32{
	"k_ItemPurgatoryResponse_Refund_Succeeded":                 0,
	"k_ItemPurgatoryResponse_Refund_Failed_ItemNotInPurgatory": 1,
	"k_ItemPurgatoryResponse_Refund_Failed_CouldNotFindItem":   2,
	"k_ItemPurgatoryResponse_Refund_Failed_NoSOCache":          3,
	"k_ItemPurgatoryResponse_Refund_Failed_NoDetail":           4,
	"k_ItemPurgatoryResponse_Refund_Failed_NexonWebAPI":        5,
}

func (x EItemPurgatoryResponse_Refund) Enum() *EItemPurgatoryResponse_Refund {
	p := new(EItemPurgatoryResponse_Refund)
	*p = x
	return p
}
func (x EItemPurgatoryResponse_Refund) String() string {
	return proto.EnumName(EItemPurgatoryResponse_Refund_name, int32(x))
}
func (x *EItemPurgatoryResponse_Refund) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EItemPurgatoryResponse_Refund_value, data, "EItemPurgatoryResponse_Refund")
	if err != nil {
		return err
	}
	*x = EItemPurgatoryResponse_Refund(value)
	return nil
}
func (EItemPurgatoryResponse_Refund) EnumDescriptor() ([]byte, []int) {
	return econ_fileDescriptor0, []int{4}
}

type CMsgApplyAutograph struct {
	AutographItemId  *uint64 `protobuf:"varint,1,opt,name=autograph_item_id" json:"autograph_item_id,omitempty"`
	ItemItemId       *uint64 `protobuf:"varint,2,opt,name=item_item_id" json:"item_item_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgApplyAutograph) Reset()                    { *m = CMsgApplyAutograph{} }
func (m *CMsgApplyAutograph) String() string            { return proto.CompactTextString(m) }
func (*CMsgApplyAutograph) ProtoMessage()               {}
func (*CMsgApplyAutograph) Descriptor() ([]byte, []int) { return econ_fileDescriptor0, []int{0} }

func (m *CMsgApplyAutograph) GetAutographItemId() uint64 {
	if m != nil && m.AutographItemId != nil {
		return *m.AutographItemId
	}
	return 0
}

func (m *CMsgApplyAutograph) GetItemItemId() uint64 {
	if m != nil && m.ItemItemId != nil {
		return *m.ItemItemId
	}
	return 0
}

type CMsgEconPlayerStrangeCountAdjustment struct {
	AccountId               *uint32                                                         `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	StrangeCountAdjustments []*CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment `protobuf:"bytes,2,rep,name=strange_count_adjustments" json:"strange_count_adjustments,omitempty"`
	XXX_unrecognized        []byte                                                          `json:"-"`
}

func (m *CMsgEconPlayerStrangeCountAdjustment) Reset()         { *m = CMsgEconPlayerStrangeCountAdjustment{} }
func (m *CMsgEconPlayerStrangeCountAdjustment) String() string { return proto.CompactTextString(m) }
func (*CMsgEconPlayerStrangeCountAdjustment) ProtoMessage()    {}
func (*CMsgEconPlayerStrangeCountAdjustment) Descriptor() ([]byte, []int) {
	return econ_fileDescriptor0, []int{1}
}

func (m *CMsgEconPlayerStrangeCountAdjustment) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgEconPlayerStrangeCountAdjustment) GetStrangeCountAdjustments() []*CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment {
	if m != nil {
		return m.StrangeCountAdjustments
	}
	return nil
}

type CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment struct {
	EventType        *uint32 `protobuf:"varint,1,opt,name=event_type" json:"event_type,omitempty"`
	ItemId           *uint64 `protobuf:"varint,2,opt,name=item_id" json:"item_id,omitempty"`
	Adjustment       *uint32 `protobuf:"varint,3,opt,name=adjustment" json:"adjustment,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment) Reset() {
	*m = CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment{}
}
func (m *CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment) ProtoMessage() {}
func (*CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment) Descriptor() ([]byte, []int) {
	return econ_fileDescriptor0, []int{1, 0}
}

func (m *CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment) GetEventType() uint32 {
	if m != nil && m.EventType != nil {
		return *m.EventType
	}
	return 0
}

func (m *CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment) GetItemId() uint64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment) GetAdjustment() uint32 {
	if m != nil && m.Adjustment != nil {
		return *m.Adjustment
	}
	return 0
}

type CMsgRequestItemPurgatory_FinalizePurchase struct {
	ItemIds          []uint64 `protobuf:"varint,1,rep,name=item_ids" json:"item_ids,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgRequestItemPurgatory_FinalizePurchase) Reset() {
	*m = CMsgRequestItemPurgatory_FinalizePurchase{}
}
func (m *CMsgRequestItemPurgatory_FinalizePurchase) String() string { return proto.CompactTextString(m) }
func (*CMsgRequestItemPurgatory_FinalizePurchase) ProtoMessage()    {}
func (*CMsgRequestItemPurgatory_FinalizePurchase) Descriptor() ([]byte, []int) {
	return econ_fileDescriptor0, []int{2}
}

func (m *CMsgRequestItemPurgatory_FinalizePurchase) GetItemIds() []uint64 {
	if m != nil {
		return m.ItemIds
	}
	return nil
}

type CMsgRequestItemPurgatory_FinalizePurchaseResponse struct {
	Result           *uint32 `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgRequestItemPurgatory_FinalizePurchaseResponse) Reset() {
	*m = CMsgRequestItemPurgatory_FinalizePurchaseResponse{}
}
func (m *CMsgRequestItemPurgatory_FinalizePurchaseResponse) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgRequestItemPurgatory_FinalizePurchaseResponse) ProtoMessage() {}
func (*CMsgRequestItemPurgatory_FinalizePurchaseResponse) Descriptor() ([]byte, []int) {
	return econ_fileDescriptor0, []int{3}
}

func (m *CMsgRequestItemPurgatory_FinalizePurchaseResponse) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

type CMsgRequestItemPurgatory_RefundPurchase struct {
	ItemId           *uint64 `protobuf:"varint,1,opt,name=item_id" json:"item_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgRequestItemPurgatory_RefundPurchase) Reset() {
	*m = CMsgRequestItemPurgatory_RefundPurchase{}
}
func (m *CMsgRequestItemPurgatory_RefundPurchase) String() string { return proto.CompactTextString(m) }
func (*CMsgRequestItemPurgatory_RefundPurchase) ProtoMessage()    {}
func (*CMsgRequestItemPurgatory_RefundPurchase) Descriptor() ([]byte, []int) {
	return econ_fileDescriptor0, []int{4}
}

func (m *CMsgRequestItemPurgatory_RefundPurchase) GetItemId() uint64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

type CMsgRequestItemPurgatory_RefundPurchaseResponse struct {
	Result           *uint32 `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgRequestItemPurgatory_RefundPurchaseResponse) Reset() {
	*m = CMsgRequestItemPurgatory_RefundPurchaseResponse{}
}
func (m *CMsgRequestItemPurgatory_RefundPurchaseResponse) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgRequestItemPurgatory_RefundPurchaseResponse) ProtoMessage() {}
func (*CMsgRequestItemPurgatory_RefundPurchaseResponse) Descriptor() ([]byte, []int) {
	return econ_fileDescriptor0, []int{5}
}

func (m *CMsgRequestItemPurgatory_RefundPurchaseResponse) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

type CMsgCraftingResponse struct {
	ItemIds          []uint64 `protobuf:"varint,1,rep,name=item_ids" json:"item_ids,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgCraftingResponse) Reset()                    { *m = CMsgCraftingResponse{} }
func (m *CMsgCraftingResponse) String() string            { return proto.CompactTextString(m) }
func (*CMsgCraftingResponse) ProtoMessage()               {}
func (*CMsgCraftingResponse) Descriptor() ([]byte, []int) { return econ_fileDescriptor0, []int{6} }

func (m *CMsgCraftingResponse) GetItemIds() []uint64 {
	if m != nil {
		return m.ItemIds
	}
	return nil
}

type CMsgGCRequestStoreSalesData struct {
	Version          *uint32 `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	Currency         *uint32 `protobuf:"varint,2,opt,name=currency" json:"currency,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCRequestStoreSalesData) Reset()                    { *m = CMsgGCRequestStoreSalesData{} }
func (m *CMsgGCRequestStoreSalesData) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCRequestStoreSalesData) ProtoMessage()               {}
func (*CMsgGCRequestStoreSalesData) Descriptor() ([]byte, []int) { return econ_fileDescriptor0, []int{7} }

func (m *CMsgGCRequestStoreSalesData) GetVersion() uint32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *CMsgGCRequestStoreSalesData) GetCurrency() uint32 {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return 0
}

type CMsgGCRequestStoreSalesDataResponse struct {
	SalePrice        []*CMsgGCRequestStoreSalesDataResponse_Price `protobuf:"bytes,1,rep,name=sale_price" json:"sale_price,omitempty"`
	Version          *uint32                                      `protobuf:"varint,2,opt,name=version" json:"version,omitempty"`
	ExpirationTime   *uint32                                      `protobuf:"varint,3,opt,name=expiration_time" json:"expiration_time,omitempty"`
	XXX_unrecognized []byte                                       `json:"-"`
}

func (m *CMsgGCRequestStoreSalesDataResponse) Reset()         { *m = CMsgGCRequestStoreSalesDataResponse{} }
func (m *CMsgGCRequestStoreSalesDataResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGCRequestStoreSalesDataResponse) ProtoMessage()    {}
func (*CMsgGCRequestStoreSalesDataResponse) Descriptor() ([]byte, []int) {
	return econ_fileDescriptor0, []int{8}
}

func (m *CMsgGCRequestStoreSalesDataResponse) GetSalePrice() []*CMsgGCRequestStoreSalesDataResponse_Price {
	if m != nil {
		return m.SalePrice
	}
	return nil
}

func (m *CMsgGCRequestStoreSalesDataResponse) GetVersion() uint32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *CMsgGCRequestStoreSalesDataResponse) GetExpirationTime() uint32 {
	if m != nil && m.ExpirationTime != nil {
		return *m.ExpirationTime
	}
	return 0
}

type CMsgGCRequestStoreSalesDataResponse_Price struct {
	ItemDef          *uint32 `protobuf:"varint,1,opt,name=item_def" json:"item_def,omitempty"`
	Price            *uint32 `protobuf:"varint,2,opt,name=price" json:"price,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCRequestStoreSalesDataResponse_Price) Reset() {
	*m = CMsgGCRequestStoreSalesDataResponse_Price{}
}
func (m *CMsgGCRequestStoreSalesDataResponse_Price) String() string { return proto.CompactTextString(m) }
func (*CMsgGCRequestStoreSalesDataResponse_Price) ProtoMessage()    {}
func (*CMsgGCRequestStoreSalesDataResponse_Price) Descriptor() ([]byte, []int) {
	return econ_fileDescriptor0, []int{8, 0}
}

func (m *CMsgGCRequestStoreSalesDataResponse_Price) GetItemDef() uint32 {
	if m != nil && m.ItemDef != nil {
		return *m.ItemDef
	}
	return 0
}

func (m *CMsgGCRequestStoreSalesDataResponse_Price) GetPrice() uint32 {
	if m != nil && m.Price != nil {
		return *m.Price
	}
	return 0
}

type CMsgGCRequestStoreSalesDataUpToDateResponse struct {
	Version          *uint32 `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	ExpirationTime   *uint32 `protobuf:"varint,2,opt,name=expiration_time" json:"expiration_time,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCRequestStoreSalesDataUpToDateResponse) Reset() {
	*m = CMsgGCRequestStoreSalesDataUpToDateResponse{}
}
func (m *CMsgGCRequestStoreSalesDataUpToDateResponse) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCRequestStoreSalesDataUpToDateResponse) ProtoMessage() {}
func (*CMsgGCRequestStoreSalesDataUpToDateResponse) Descriptor() ([]byte, []int) {
	return econ_fileDescriptor0, []int{9}
}

func (m *CMsgGCRequestStoreSalesDataUpToDateResponse) GetVersion() uint32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *CMsgGCRequestStoreSalesDataUpToDateResponse) GetExpirationTime() uint32 {
	if m != nil && m.ExpirationTime != nil {
		return *m.ExpirationTime
	}
	return 0
}

type CMsgGCToGCPingRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgGCToGCPingRequest) Reset()                    { *m = CMsgGCToGCPingRequest{} }
func (m *CMsgGCToGCPingRequest) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCToGCPingRequest) ProtoMessage()               {}
func (*CMsgGCToGCPingRequest) Descriptor() ([]byte, []int) { return econ_fileDescriptor0, []int{10} }

type CMsgGCToGCPingResponse struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgGCToGCPingResponse) Reset()                    { *m = CMsgGCToGCPingResponse{} }
func (m *CMsgGCToGCPingResponse) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCToGCPingResponse) ProtoMessage()               {}
func (*CMsgGCToGCPingResponse) Descriptor() ([]byte, []int) { return econ_fileDescriptor0, []int{11} }

type CMsgGCToGCGetUserSessionServer struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCToGCGetUserSessionServer) Reset()                    { *m = CMsgGCToGCGetUserSessionServer{} }
func (m *CMsgGCToGCGetUserSessionServer) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCToGCGetUserSessionServer) ProtoMessage()               {}
func (*CMsgGCToGCGetUserSessionServer) Descriptor() ([]byte, []int) { return econ_fileDescriptor0, []int{12} }

func (m *CMsgGCToGCGetUserSessionServer) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

type CMsgGCToGCGetUserSessionServerResponse struct {
	ServerSteamId    *uint64 `protobuf:"fixed64,1,opt,name=server_steam_id" json:"server_steam_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCToGCGetUserSessionServerResponse) Reset() {
	*m = CMsgGCToGCGetUserSessionServerResponse{}
}
func (m *CMsgGCToGCGetUserSessionServerResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGCToGCGetUserSessionServerResponse) ProtoMessage()    {}
func (*CMsgGCToGCGetUserSessionServerResponse) Descriptor() ([]byte, []int) {
	return econ_fileDescriptor0, []int{13}
}

func (m *CMsgGCToGCGetUserSessionServerResponse) GetServerSteamId() uint64 {
	if m != nil && m.ServerSteamId != nil {
		return *m.ServerSteamId
	}
	return 0
}

type CMsgGCToGCGetUserServerMembers struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	MaxSpectators    *uint32 `protobuf:"varint,2,opt,name=max_spectators" json:"max_spectators,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCToGCGetUserServerMembers) Reset()                    { *m = CMsgGCToGCGetUserServerMembers{} }
func (m *CMsgGCToGCGetUserServerMembers) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCToGCGetUserServerMembers) ProtoMessage()               {}
func (*CMsgGCToGCGetUserServerMembers) Descriptor() ([]byte, []int) { return econ_fileDescriptor0, []int{14} }

func (m *CMsgGCToGCGetUserServerMembers) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgGCToGCGetUserServerMembers) GetMaxSpectators() uint32 {
	if m != nil && m.MaxSpectators != nil {
		return *m.MaxSpectators
	}
	return 0
}

type CMsgGCToGCGetUserServerMembersResponse struct {
	MemberAccountId  []uint32 `protobuf:"varint,1,rep,name=member_account_id" json:"member_account_id,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgGCToGCGetUserServerMembersResponse) Reset() {
	*m = CMsgGCToGCGetUserServerMembersResponse{}
}
func (m *CMsgGCToGCGetUserServerMembersResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGCToGCGetUserServerMembersResponse) ProtoMessage()    {}
func (*CMsgGCToGCGetUserServerMembersResponse) Descriptor() ([]byte, []int) {
	return econ_fileDescriptor0, []int{15}
}

func (m *CMsgGCToGCGetUserServerMembersResponse) GetMemberAccountId() []uint32 {
	if m != nil {
		return m.MemberAccountId
	}
	return nil
}

type CMsgLookupMultipleAccountNames struct {
	Accountids       []uint32 `protobuf:"varint,1,rep,packed,name=accountids" json:"accountids,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgLookupMultipleAccountNames) Reset()                    { *m = CMsgLookupMultipleAccountNames{} }
func (m *CMsgLookupMultipleAccountNames) String() string            { return proto.CompactTextString(m) }
func (*CMsgLookupMultipleAccountNames) ProtoMessage()               {}
func (*CMsgLookupMultipleAccountNames) Descriptor() ([]byte, []int) { return econ_fileDescriptor0, []int{16} }

func (m *CMsgLookupMultipleAccountNames) GetAccountids() []uint32 {
	if m != nil {
		return m.Accountids
	}
	return nil
}

type CMsgLookupMultipleAccountNamesResponse struct {
	Accounts         []*CMsgLookupMultipleAccountNamesResponse_Account `protobuf:"bytes,1,rep,name=accounts" json:"accounts,omitempty"`
	XXX_unrecognized []byte                                            `json:"-"`
}

func (m *CMsgLookupMultipleAccountNamesResponse) Reset() {
	*m = CMsgLookupMultipleAccountNamesResponse{}
}
func (m *CMsgLookupMultipleAccountNamesResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgLookupMultipleAccountNamesResponse) ProtoMessage()    {}
func (*CMsgLookupMultipleAccountNamesResponse) Descriptor() ([]byte, []int) {
	return econ_fileDescriptor0, []int{17}
}

func (m *CMsgLookupMultipleAccountNamesResponse) GetAccounts() []*CMsgLookupMultipleAccountNamesResponse_Account {
	if m != nil {
		return m.Accounts
	}
	return nil
}

type CMsgLookupMultipleAccountNamesResponse_Account struct {
	Accountid        *uint32 `protobuf:"varint,1,opt,name=accountid" json:"accountid,omitempty"`
	Persona          *string `protobuf:"bytes,2,opt,name=persona" json:"persona,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgLookupMultipleAccountNamesResponse_Account) Reset() {
	*m = CMsgLookupMultipleAccountNamesResponse_Account{}
}
func (m *CMsgLookupMultipleAccountNamesResponse_Account) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgLookupMultipleAccountNamesResponse_Account) ProtoMessage() {}
func (*CMsgLookupMultipleAccountNamesResponse_Account) Descriptor() ([]byte, []int) {
	return econ_fileDescriptor0, []int{17, 0}
}

func (m *CMsgLookupMultipleAccountNamesResponse_Account) GetAccountid() uint32 {
	if m != nil && m.Accountid != nil {
		return *m.Accountid
	}
	return 0
}

func (m *CMsgLookupMultipleAccountNamesResponse_Account) GetPersona() string {
	if m != nil && m.Persona != nil {
		return *m.Persona
	}
	return ""
}

type CMsgGCToGCGrantSelfMadeItemToAccount struct {
	ItemDefIndex     *uint32 `protobuf:"varint,1,opt,name=item_def_index" json:"item_def_index,omitempty"`
	Accountid        *uint32 `protobuf:"varint,2,opt,name=accountid" json:"accountid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCToGCGrantSelfMadeItemToAccount) Reset()         { *m = CMsgGCToGCGrantSelfMadeItemToAccount{} }
func (m *CMsgGCToGCGrantSelfMadeItemToAccount) String() string { return proto.CompactTextString(m) }
func (*CMsgGCToGCGrantSelfMadeItemToAccount) ProtoMessage()    {}
func (*CMsgGCToGCGrantSelfMadeItemToAccount) Descriptor() ([]byte, []int) {
	return econ_fileDescriptor0, []int{18}
}

func (m *CMsgGCToGCGrantSelfMadeItemToAccount) GetItemDefIndex() uint32 {
	if m != nil && m.ItemDefIndex != nil {
		return *m.ItemDefIndex
	}
	return 0
}

func (m *CMsgGCToGCGrantSelfMadeItemToAccount) GetAccountid() uint32 {
	if m != nil && m.Accountid != nil {
		return *m.Accountid
	}
	return 0
}

type CMsgGCToGCThankedByNewUser struct {
	NewUserAccountid     *uint32 `protobuf:"varint,1,opt,name=new_user_accountid" json:"new_user_accountid,omitempty"`
	ThankedUserAccountid *uint32 `protobuf:"varint,2,opt,name=thanked_user_accountid" json:"thanked_user_accountid,omitempty"`
	XXX_unrecognized     []byte  `json:"-"`
}

func (m *CMsgGCToGCThankedByNewUser) Reset()                    { *m = CMsgGCToGCThankedByNewUser{} }
func (m *CMsgGCToGCThankedByNewUser) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCToGCThankedByNewUser) ProtoMessage()               {}
func (*CMsgGCToGCThankedByNewUser) Descriptor() ([]byte, []int) { return econ_fileDescriptor0, []int{19} }

func (m *CMsgGCToGCThankedByNewUser) GetNewUserAccountid() uint32 {
	if m != nil && m.NewUserAccountid != nil {
		return *m.NewUserAccountid
	}
	return 0
}

func (m *CMsgGCToGCThankedByNewUser) GetThankedUserAccountid() uint32 {
	if m != nil && m.ThankedUserAccountid != nil {
		return *m.ThankedUserAccountid
	}
	return 0
}

type CMsgGCShuffleCrateContents struct {
	CrateItemId      *uint64 `protobuf:"varint,1,opt,name=crate_item_id" json:"crate_item_id,omitempty"`
	UserCodeString   *string `protobuf:"bytes,2,opt,name=user_code_string" json:"user_code_string,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCShuffleCrateContents) Reset()                    { *m = CMsgGCShuffleCrateContents{} }
func (m *CMsgGCShuffleCrateContents) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCShuffleCrateContents) ProtoMessage()               {}
func (*CMsgGCShuffleCrateContents) Descriptor() ([]byte, []int) { return econ_fileDescriptor0, []int{20} }

func (m *CMsgGCShuffleCrateContents) GetCrateItemId() uint64 {
	if m != nil && m.CrateItemId != nil {
		return *m.CrateItemId
	}
	return 0
}

func (m *CMsgGCShuffleCrateContents) GetUserCodeString() string {
	if m != nil && m.UserCodeString != nil {
		return *m.UserCodeString
	}
	return ""
}

type CMsgGCQuestObjective_Progress struct {
	QuestItemId      *uint64 `protobuf:"varint,1,opt,name=quest_item_id" json:"quest_item_id,omitempty"`
	QuestAttribIndex *uint32 `protobuf:"varint,2,opt,name=quest_attrib_index" json:"quest_attrib_index,omitempty"`
	Delta            *uint32 `protobuf:"varint,3,opt,name=delta" json:"delta,omitempty"`
	OwnerSteamid     *uint64 `protobuf:"fixed64,4,opt,name=owner_steamid" json:"owner_steamid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCQuestObjective_Progress) Reset()                    { *m = CMsgGCQuestObjective_Progress{} }
func (m *CMsgGCQuestObjective_Progress) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCQuestObjective_Progress) ProtoMessage()               {}
func (*CMsgGCQuestObjective_Progress) Descriptor() ([]byte, []int) { return econ_fileDescriptor0, []int{21} }

func (m *CMsgGCQuestObjective_Progress) GetQuestItemId() uint64 {
	if m != nil && m.QuestItemId != nil {
		return *m.QuestItemId
	}
	return 0
}

func (m *CMsgGCQuestObjective_Progress) GetQuestAttribIndex() uint32 {
	if m != nil && m.QuestAttribIndex != nil {
		return *m.QuestAttribIndex
	}
	return 0
}

func (m *CMsgGCQuestObjective_Progress) GetDelta() uint32 {
	if m != nil && m.Delta != nil {
		return *m.Delta
	}
	return 0
}

func (m *CMsgGCQuestObjective_Progress) GetOwnerSteamid() uint64 {
	if m != nil && m.OwnerSteamid != nil {
		return *m.OwnerSteamid
	}
	return 0
}

type CMsgGCQuestObjective_PointsChange struct {
	QuestItemId      *uint64 `protobuf:"varint,1,opt,name=quest_item_id" json:"quest_item_id,omitempty"`
	StandardPoints   *uint32 `protobuf:"varint,2,opt,name=standard_points" json:"standard_points,omitempty"`
	BonusPoints      *uint32 `protobuf:"varint,3,opt,name=bonus_points" json:"bonus_points,omitempty"`
	OwnerSteamid     *uint64 `protobuf:"fixed64,4,opt,name=owner_steamid" json:"owner_steamid,omitempty"`
	UpdateBasePoints *bool   `protobuf:"varint,5,opt,name=update_base_points,def=0" json:"update_base_points,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCQuestObjective_PointsChange) Reset()         { *m = CMsgGCQuestObjective_PointsChange{} }
func (m *CMsgGCQuestObjective_PointsChange) String() string { return proto.CompactTextString(m) }
func (*CMsgGCQuestObjective_PointsChange) ProtoMessage()    {}
func (*CMsgGCQuestObjective_PointsChange) Descriptor() ([]byte, []int) {
	return econ_fileDescriptor0, []int{22}
}

const Default_CMsgGCQuestObjective_PointsChange_UpdateBasePoints bool = false

func (m *CMsgGCQuestObjective_PointsChange) GetQuestItemId() uint64 {
	if m != nil && m.QuestItemId != nil {
		return *m.QuestItemId
	}
	return 0
}

func (m *CMsgGCQuestObjective_PointsChange) GetStandardPoints() uint32 {
	if m != nil && m.StandardPoints != nil {
		return *m.StandardPoints
	}
	return 0
}

func (m *CMsgGCQuestObjective_PointsChange) GetBonusPoints() uint32 {
	if m != nil && m.BonusPoints != nil {
		return *m.BonusPoints
	}
	return 0
}

func (m *CMsgGCQuestObjective_PointsChange) GetOwnerSteamid() uint64 {
	if m != nil && m.OwnerSteamid != nil {
		return *m.OwnerSteamid
	}
	return 0
}

func (m *CMsgGCQuestObjective_PointsChange) GetUpdateBasePoints() bool {
	if m != nil && m.UpdateBasePoints != nil {
		return *m.UpdateBasePoints
	}
	return Default_CMsgGCQuestObjective_PointsChange_UpdateBasePoints
}

type CMsgGCQuestObjective_PointsChangeResponse struct {
	QuestItemId      *uint64 `protobuf:"varint,1,opt,name=quest_item_id" json:"quest_item_id,omitempty"`
	StandardPoints   *uint32 `protobuf:"varint,2,opt,name=standard_points" json:"standard_points,omitempty"`
	BonusPoints      *uint32 `protobuf:"varint,3,opt,name=bonus_points" json:"bonus_points,omitempty"`
	UpdateBasePoints *bool   `protobuf:"varint,4,opt,name=update_base_points" json:"update_base_points,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCQuestObjective_PointsChangeResponse) Reset() {
	*m = CMsgGCQuestObjective_PointsChangeResponse{}
}
func (m *CMsgGCQuestObjective_PointsChangeResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGCQuestObjective_PointsChangeResponse) ProtoMessage()    {}
func (*CMsgGCQuestObjective_PointsChangeResponse) Descriptor() ([]byte, []int) {
	return econ_fileDescriptor0, []int{23}
}

func (m *CMsgGCQuestObjective_PointsChangeResponse) GetQuestItemId() uint64 {
	if m != nil && m.QuestItemId != nil {
		return *m.QuestItemId
	}
	return 0
}

func (m *CMsgGCQuestObjective_PointsChangeResponse) GetStandardPoints() uint32 {
	if m != nil && m.StandardPoints != nil {
		return *m.StandardPoints
	}
	return 0
}

func (m *CMsgGCQuestObjective_PointsChangeResponse) GetBonusPoints() uint32 {
	if m != nil && m.BonusPoints != nil {
		return *m.BonusPoints
	}
	return 0
}

func (m *CMsgGCQuestObjective_PointsChangeResponse) GetUpdateBasePoints() bool {
	if m != nil && m.UpdateBasePoints != nil {
		return *m.UpdateBasePoints
	}
	return false
}

type CMsgGCQuestComplete_Request struct {
	QuestItemId      *uint64 `protobuf:"varint,1,opt,name=quest_item_id" json:"quest_item_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCQuestComplete_Request) Reset()                    { *m = CMsgGCQuestComplete_Request{} }
func (m *CMsgGCQuestComplete_Request) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCQuestComplete_Request) ProtoMessage()               {}
func (*CMsgGCQuestComplete_Request) Descriptor() ([]byte, []int) { return econ_fileDescriptor0, []int{24} }

func (m *CMsgGCQuestComplete_Request) GetQuestItemId() uint64 {
	if m != nil && m.QuestItemId != nil {
		return *m.QuestItemId
	}
	return 0
}

type CMsgGCQuestCompleted struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgGCQuestCompleted) Reset()                    { *m = CMsgGCQuestCompleted{} }
func (m *CMsgGCQuestCompleted) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCQuestCompleted) ProtoMessage()               {}
func (*CMsgGCQuestCompleted) Descriptor() ([]byte, []int) { return econ_fileDescriptor0, []int{25} }

type CMsgGCQuestObjective_RequestLoanerItems struct {
	QuestItemId      *uint64 `protobuf:"varint,1,opt,name=quest_item_id" json:"quest_item_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCQuestObjective_RequestLoanerItems) Reset() {
	*m = CMsgGCQuestObjective_RequestLoanerItems{}
}
func (m *CMsgGCQuestObjective_RequestLoanerItems) String() string { return proto.CompactTextString(m) }
func (*CMsgGCQuestObjective_RequestLoanerItems) ProtoMessage()    {}
func (*CMsgGCQuestObjective_RequestLoanerItems) Descriptor() ([]byte, []int) {
	return econ_fileDescriptor0, []int{26}
}

func (m *CMsgGCQuestObjective_RequestLoanerItems) GetQuestItemId() uint64 {
	if m != nil && m.QuestItemId != nil {
		return *m.QuestItemId
	}
	return 0
}

type CMsgGCQuestObjective_RequestLoanerResponse struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgGCQuestObjective_RequestLoanerResponse) Reset() {
	*m = CMsgGCQuestObjective_RequestLoanerResponse{}
}
func (m *CMsgGCQuestObjective_RequestLoanerResponse) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCQuestObjective_RequestLoanerResponse) ProtoMessage() {}
func (*CMsgGCQuestObjective_RequestLoanerResponse) Descriptor() ([]byte, []int) {
	return econ_fileDescriptor0, []int{27}
}

type CMsgCraftCollectionUpgrade struct {
	ItemId           []uint64 `protobuf:"varint,1,rep,name=item_id" json:"item_id,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgCraftCollectionUpgrade) Reset()                    { *m = CMsgCraftCollectionUpgrade{} }
func (m *CMsgCraftCollectionUpgrade) String() string            { return proto.CompactTextString(m) }
func (*CMsgCraftCollectionUpgrade) ProtoMessage()               {}
func (*CMsgCraftCollectionUpgrade) Descriptor() ([]byte, []int) { return econ_fileDescriptor0, []int{28} }

func (m *CMsgCraftCollectionUpgrade) GetItemId() []uint64 {
	if m != nil {
		return m.ItemId
	}
	return nil
}

type CMsgCraftHalloweenOffering struct {
	ToolId           *uint64  `protobuf:"varint,1,opt,name=tool_id" json:"tool_id,omitempty"`
	ItemId           []uint64 `protobuf:"varint,2,rep,name=item_id" json:"item_id,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgCraftHalloweenOffering) Reset()                    { *m = CMsgCraftHalloweenOffering{} }
func (m *CMsgCraftHalloweenOffering) String() string            { return proto.CompactTextString(m) }
func (*CMsgCraftHalloweenOffering) ProtoMessage()               {}
func (*CMsgCraftHalloweenOffering) Descriptor() ([]byte, []int) { return econ_fileDescriptor0, []int{29} }

func (m *CMsgCraftHalloweenOffering) GetToolId() uint64 {
	if m != nil && m.ToolId != nil {
		return *m.ToolId
	}
	return 0
}

func (m *CMsgCraftHalloweenOffering) GetItemId() []uint64 {
	if m != nil {
		return m.ItemId
	}
	return nil
}

type CMsgGCQuestDiscard_Request struct {
	QuestItemId      *uint64 `protobuf:"varint,1,opt,name=quest_item_id" json:"quest_item_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCQuestDiscard_Request) Reset()                    { *m = CMsgGCQuestDiscard_Request{} }
func (m *CMsgGCQuestDiscard_Request) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCQuestDiscard_Request) ProtoMessage()               {}
func (*CMsgGCQuestDiscard_Request) Descriptor() ([]byte, []int) { return econ_fileDescriptor0, []int{30} }

func (m *CMsgGCQuestDiscard_Request) GetQuestItemId() uint64 {
	if m != nil && m.QuestItemId != nil {
		return *m.QuestItemId
	}
	return 0
}

func init() {
	proto.RegisterType((*CMsgApplyAutograph)(nil), "CMsgApplyAutograph")
	proto.RegisterType((*CMsgEconPlayerStrangeCountAdjustment)(nil), "CMsgEconPlayerStrangeCountAdjustment")
	proto.RegisterType((*CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment)(nil), "CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment")
	proto.RegisterType((*CMsgRequestItemPurgatory_FinalizePurchase)(nil), "CMsgRequestItemPurgatory_FinalizePurchase")
	proto.RegisterType((*CMsgRequestItemPurgatory_FinalizePurchaseResponse)(nil), "CMsgRequestItemPurgatory_FinalizePurchaseResponse")
	proto.RegisterType((*CMsgRequestItemPurgatory_RefundPurchase)(nil), "CMsgRequestItemPurgatory_RefundPurchase")
	proto.RegisterType((*CMsgRequestItemPurgatory_RefundPurchaseResponse)(nil), "CMsgRequestItemPurgatory_RefundPurchaseResponse")
	proto.RegisterType((*CMsgCraftingResponse)(nil), "CMsgCraftingResponse")
	proto.RegisterType((*CMsgGCRequestStoreSalesData)(nil), "CMsgGCRequestStoreSalesData")
	proto.RegisterType((*CMsgGCRequestStoreSalesDataResponse)(nil), "CMsgGCRequestStoreSalesDataResponse")
	proto.RegisterType((*CMsgGCRequestStoreSalesDataResponse_Price)(nil), "CMsgGCRequestStoreSalesDataResponse.Price")
	proto.RegisterType((*CMsgGCRequestStoreSalesDataUpToDateResponse)(nil), "CMsgGCRequestStoreSalesDataUpToDateResponse")
	proto.RegisterType((*CMsgGCToGCPingRequest)(nil), "CMsgGCToGCPingRequest")
	proto.RegisterType((*CMsgGCToGCPingResponse)(nil), "CMsgGCToGCPingResponse")
	proto.RegisterType((*CMsgGCToGCGetUserSessionServer)(nil), "CMsgGCToGCGetUserSessionServer")
	proto.RegisterType((*CMsgGCToGCGetUserSessionServerResponse)(nil), "CMsgGCToGCGetUserSessionServerResponse")
	proto.RegisterType((*CMsgGCToGCGetUserServerMembers)(nil), "CMsgGCToGCGetUserServerMembers")
	proto.RegisterType((*CMsgGCToGCGetUserServerMembersResponse)(nil), "CMsgGCToGCGetUserServerMembersResponse")
	proto.RegisterType((*CMsgLookupMultipleAccountNames)(nil), "CMsgLookupMultipleAccountNames")
	proto.RegisterType((*CMsgLookupMultipleAccountNamesResponse)(nil), "CMsgLookupMultipleAccountNamesResponse")
	proto.RegisterType((*CMsgLookupMultipleAccountNamesResponse_Account)(nil), "CMsgLookupMultipleAccountNamesResponse.Account")
	proto.RegisterType((*CMsgGCToGCGrantSelfMadeItemToAccount)(nil), "CMsgGCToGCGrantSelfMadeItemToAccount")
	proto.RegisterType((*CMsgGCToGCThankedByNewUser)(nil), "CMsgGCToGCThankedByNewUser")
	proto.RegisterType((*CMsgGCShuffleCrateContents)(nil), "CMsgGCShuffleCrateContents")
	proto.RegisterType((*CMsgGCQuestObjective_Progress)(nil), "CMsgGCQuestObjective_Progress")
	proto.RegisterType((*CMsgGCQuestObjective_PointsChange)(nil), "CMsgGCQuestObjective_PointsChange")
	proto.RegisterType((*CMsgGCQuestObjective_PointsChangeResponse)(nil), "CMsgGCQuestObjective_PointsChangeResponse")
	proto.RegisterType((*CMsgGCQuestComplete_Request)(nil), "CMsgGCQuestComplete_Request")
	proto.RegisterType((*CMsgGCQuestCompleted)(nil), "CMsgGCQuestCompleted")
	proto.RegisterType((*CMsgGCQuestObjective_RequestLoanerItems)(nil), "CMsgGCQuestObjective_RequestLoanerItems")
	proto.RegisterType((*CMsgGCQuestObjective_RequestLoanerResponse)(nil), "CMsgGCQuestObjective_RequestLoanerResponse")
	proto.RegisterType((*CMsgCraftCollectionUpgrade)(nil), "CMsgCraftCollectionUpgrade")
	proto.RegisterType((*CMsgCraftHalloweenOffering)(nil), "CMsgCraftHalloweenOffering")
	proto.RegisterType((*CMsgGCQuestDiscard_Request)(nil), "CMsgGCQuestDiscard_Request")
	proto.RegisterEnum("EGCItemMsg", EGCItemMsg_name, EGCItemMsg_value)
	proto.RegisterEnum("EGCMsgResponse", EGCMsgResponse_name, EGCMsgResponse_value)
	proto.RegisterEnum("EUnlockStyle", EUnlockStyle_name, EUnlockStyle_value)
	proto.RegisterEnum("EItemPurgatoryResponse_Finalize", EItemPurgatoryResponse_Finalize_name, EItemPurgatoryResponse_Finalize_value)
	proto.RegisterEnum("EItemPurgatoryResponse_Refund", EItemPurgatoryResponse_Refund_name, EItemPurgatoryResponse_Refund_value)
}

var econ_fileDescriptor0 = []byte{
	// 3370 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x59, 0x79, 0x74, 0x24, 0x45,
	0xfd, 0x27, 0xc9, 0x66, 0xa7, 0xa9, 0x6c, 0x76, 0x8b, 0x9e, 0xd9, 0x83, 0x2c, 0xcb, 0x31, 0x0b,
	0xbb, 0x4b, 0xd8, 0xcd, 0xfe, 0x76, 0xf9, 0xc9, 0x43, 0x14, 0x34, 0x99, 0x99, 0x64, 0xf7, 0x91,
	0x6c, 0xb2, 0x99, 0x84, 0xe5, 0xbf, 0xb1, 0xd3, 0x5d, 0x93, 0x69, 0xd2, 0xd3, 0x3d, 0xf4, 0x91,
	0x64, 0xfc, 0x0b, 0x50, 0x4e, 0x45, 0xc5, 0xeb, 0x3d, 0xc1, 0x1b, 0x39, 0xc4, 0x5b, 0x9f, 0x0a,
	0xde, 0x20, 0x87, 0xfa, 0x00, 0x05, 0xd4, 0xf7, 0x54, 0x10, 0xdf, 0x53, 0xee, 0x53, 0xd1, 0xbf,
	0xb8, 0xfc, 0x56, 0x55, 0x77, 0x4f, 0xd5, 0x4c, 0xcf, 0x64, 0xfe, 0xf0, 0x8f, 0x7d, 0x9b, 0xa9,
	0xfa, 0xd4, 0xf7, 0xbe, 0xaa, 0x1a, 0x6d, 0x26, 0xba, 0x63, 0x97, 0x16, 0xf5, 0x2a, 0xf1, 0x3c,
	0x6d, 0x91, 0x78, 0x23, 0x35, 0xd7, 0xf1, 0x9d, 0xa1, 0xb4, 0xe7, 0x13, 0xad, 0x2a, 0x2f, 0x66,
	0x0b, 0x48, 0xcd, 0x4d, 0x79, 0x8b, 0xa3, 0xb5, 0x9a, 0x55, 0x1f, 0x0d, 0x7c, 0x67, 0xd1, 0xd5,
	0x6a, 0x15, 0xf5, 0x44, 0x74, 0x82, 0x16, 0xfd, 0x28, 0x99, 0x3e, 0xa9, 0x96, 0x4c, 0x63, 0x5b,
	0xcf, 0xa9, 0x3d, 0x7b, 0xd6, 0xa9, 0x19, 0xb4, 0x81, 0x2f, 0x84, 0xab, 0xbd, 0x74, 0x35, 0xfb,
	0x6a, 0x0f, 0x3a, 0x9d, 0xd2, 0x29, 0x00, 0xe7, 0x19, 0x4b, 0xab, 0x13, 0xb7, 0xe8, 0xbb, 0x9a,
	0xbd, 0x48, 0x72, 0x4e, 0x60, 0xfb, 0xa3, 0xc6, 0x25, 0x81, 0xe7, 0x57, 0x89, 0xed, 0xab, 0x2a,
	0x42, 0x9a, 0xae, 0xd3, 0xc5, 0x88, 0xe4, 0xa0, 0xfa, 0x3e, 0x74, 0xa2, 0xc7, 0xd1, 0x25, 0xbe,
	0xa3, 0xc5, 0x78, 0x0f, 0xe8, 0xf7, 0xed, 0x19, 0x38, 0x78, 0xfe, 0x48, 0x37, 0xd4, 0x47, 0x72,
	0xc9, 0xeb, 0x43, 0xb3, 0x68, 0x6b, 0xae, 0xbd, 0x40, 0x64, 0x19, 0xfe, 0x28, 0xf9, 0xf5, 0x1a,
	0x09, 0x05, 0xda, 0x84, 0x52, 0x92, 0x7a, 0x4c, 0xea, 0xf8, 0xc8, 0xb6, 0x3e, 0x0a, 0xca, 0x9e,
	0x8f, 0xce, 0xa4, 0x32, 0xcd, 0x92, 0x4b, 0x03, 0xe2, 0xf9, 0x87, 0x01, 0x3f, 0x13, 0xb8, 0x8b,
	0x9a, 0xef, 0xb8, 0xf5, 0xd2, 0xb8, 0x69, 0x6b, 0x96, 0xf9, 0x7e, 0x02, 0x2b, 0x7a, 0x45, 0xf3,
	0x88, 0x8a, 0x91, 0x12, 0x52, 0xf4, 0x80, 0x47, 0x1f, 0x58, 0x2c, 0x87, 0x0e, 0x74, 0x7d, 0x7c,
	0x96, 0x78, 0x35, 0xc7, 0x06, 0x32, 0x1b, 0xd1, 0x7a, 0x97, 0x78, 0x81, 0xe5, 0x73, 0x41, 0xb3,
	0xe7, 0xa1, 0xdd, 0x6d, 0x89, 0xcc, 0x92, 0x72, 0x60, 0x1b, 0xb1, 0x04, 0x82, 0x4e, 0xcc, 0x91,
	0xd9, 0x51, 0xb4, 0xbf, 0xcb, 0xb3, 0x6d, 0xd9, 0xef, 0x41, 0x19, 0x4a, 0x22, 0xe7, 0x6a, 0x65,
	0xdf, 0xb4, 0x17, 0x63, 0x5c, 0xab, 0xb6, 0xef, 0x45, 0xdb, 0x29, 0x72, 0x22, 0x17, 0xb2, 0x2b,
	0x02, 0x1b, 0x52, 0xd4, 0x2c, 0xe2, 0xe5, 0x35, 0x5f, 0xa3, 0xc2, 0x2d, 0x13, 0xd7, 0x33, 0x1d,
	0x3b, 0xf4, 0x00, 0x50, 0xd0, 0x03, 0xd7, 0x25, 0xb6, 0x5e, 0x67, 0x2e, 0x18, 0xcc, 0xde, 0xd5,
	0x83, 0x76, 0x76, 0x20, 0x11, 0xf3, 0xbe, 0x00, 0x21, 0x0f, 0x16, 0x4b, 0x35, 0xd7, 0xd4, 0x09,
	0xe3, 0x3e, 0x70, 0x70, 0x78, 0xa4, 0x8b, 0x93, 0x23, 0x33, 0xf4, 0x84, 0x28, 0x0a, 0x63, 0xac,
	0x6e, 0x45, 0x9b, 0xc8, 0x6a, 0xcd, 0x74, 0x35, 0x1f, 0xd6, 0x4a, 0xbe, 0x59, 0x25, 0x3c, 0x00,
	0x86, 0xf6, 0xa0, 0x7e, 0x7e, 0x24, 0x52, 0xd7, 0x20, 0xe5, 0x50, 0xfc, 0x41, 0xd4, 0xcf, 0xf9,
	0x73, 0xd9, 0x8f, 0xa1, 0xb3, 0x3a, 0x08, 0x30, 0x5f, 0x9b, 0x73, 0xe0, 0xff, 0x86, 0x99, 0x5b,
	0xac, 0x91, 0x20, 0x02, 0x27, 0xbc, 0x15, 0x6d, 0xe6, 0x84, 0xe7, 0x9c, 0x89, 0xdc, 0x0c, 0x73,
	0x01, 0x63, 0x90, 0xdd, 0x86, 0xb6, 0x34, 0x6f, 0x70, 0xe2, 0xd9, 0xff, 0x47, 0x27, 0x37, 0x76,
	0x26, 0x88, 0x3f, 0xef, 0x41, 0x36, 0x41, 0x4d, 0x00, 0xca, 0x45, 0xe2, 0x02, 0xdf, 0xa4, 0x14,
	0x85, 0x60, 0xd9, 0xd5, 0xf9, 0x54, 0x2c, 0x3c, 0xc8, 0xea, 0xb1, 0x95, 0x12, 0x2b, 0x37, 0x11,
	0x89, 0xf5, 0xd9, 0xc9, 0x44, 0xc6, 0x14, 0x39, 0x45, 0xaa, 0x0b, 0xa0, 0x6f, 0x62, 0x6d, 0xd8,
	0x82, 0x36, 0x56, 0xb5, 0xd5, 0x92, 0x57, 0x23, 0xba, 0x4f, 0x63, 0xd3, 0x0b, 0x35, 0xcf, 0x25,
	0x0a, 0x24, 0x50, 0x8b, 0x05, 0x82, 0x5a, 0x56, 0x65, 0x4b, 0x25, 0x89, 0x78, 0x1f, 0x10, 0x39,
	0x97, 0x8b, 0x34, 0xe9, 0x38, 0x4b, 0x41, 0x6d, 0x0a, 0xe2, 0xda, 0xac, 0x59, 0x64, 0x94, 0xa3,
	0x8e, 0x68, 0x50, 0x29, 0x81, 0x7d, 0x24, 0x52, 0x14, 0xcb, 0x83, 0x63, 0xbd, 0xb8, 0x27, 0x7b,
	0x63, 0x0f, 0xe7, 0xdf, 0xfe, 0x68, 0xcc, 0x7f, 0x14, 0x29, 0x21, 0x09, 0x2f, 0x0c, 0xc7, 0xfd,
	0x23, 0xdd, 0x1d, 0x1d, 0x09, 0x17, 0x87, 0xf6, 0xa1, 0x54, 0xf8, 0xa7, 0x7a, 0x02, 0x3a, 0x3e,
	0x16, 0xa8, 0x51, 0xad, 0x6a, 0xa0, 0xb0, 0x63, 0x6b, 0xcc, 0x36, 0xc7, 0x67, 0x8f, 0xf2, 0x5a,
	0x1c, 0xda, 0x06, 0xaa, 0x9e, 0x5f, 0x24, 0x56, 0x79, 0x4a, 0x33, 0x08, 0xcd, 0xf2, 0x39, 0x27,
	0xa2, 0x05, 0xb6, 0x8d, 0xe2, 0xb6, 0x64, 0xda, 0x06, 0x59, 0x0d, 0x09, 0x4a, 0x3c, 0xb8, 0xb9,
	0x2f, 0x46, 0x43, 0x0d, 0x92, 0x73, 0x15, 0xcd, 0x5e, 0x22, 0xc6, 0x58, 0xfd, 0x08, 0x59, 0xa1,
	0x76, 0x57, 0x87, 0x90, 0x6a, 0x93, 0x95, 0x52, 0xe0, 0x35, 0x8c, 0x1c, 0x4b, 0x77, 0x32, 0xda,
	0xe2, 0x73, 0x7c, 0xf3, 0x3e, 0xa7, 0x3c, 0x15, 0x51, 0x2e, 0x56, 0x82, 0x72, 0xd9, 0x22, 0x50,
	0x4c, 0x7c, 0x28, 0xd2, 0xb6, 0x4f, 0xab, 0xbf, 0xba, 0x19, 0x0d, 0xea, 0x74, 0xa1, 0xa9, 0x09,
	0x6d, 0x43, 0x98, 0x11, 0xd3, 0x1d, 0x83, 0x40, 0x9c, 0xb9, 0x10, 0xe0, 0xa1, 0xee, 0xab, 0x68,
	0x07, 0x27, 0x77, 0x94, 0xe6, 0xc1, 0xf4, 0xc2, 0x25, 0x10, 0x37, 0xe6, 0x32, 0x29, 0xcd, 0xb8,
	0xd0, 0xcd, 0x20, 0x60, 0x29, 0x45, 0x96, 0x22, 0x4d, 0x14, 0x41, 0x05, 0xbe, 0xac, 0xf9, 0x40,
	0x6e, 0x21, 0xb4, 0x47, 0x6f, 0x94, 0xcd, 0x06, 0xb1, 0x7c, 0x8d, 0xe7, 0x3d, 0xa5, 0xe0, 0xac,
	0xd8, 0x51, 0x80, 0x03, 0x85, 0x75, 0x2c, 0xbe, 0x6f, 0xee, 0x41, 0xa7, 0x25, 0xb3, 0x76, 0x4c,
	0x50, 0x25, 0x57, 0xa1, 0xdd, 0xa7, 0x1d, 0x7b, 0x9a, 0x35, 0xbe, 0x66, 0x1b, 0x9a, 0x6b, 0x94,
	0x6a, 0x0c, 0x1f, 0xf2, 0x86, 0x76, 0xbb, 0xe0, 0xd8, 0x81, 0x17, 0xad, 0x76, 0x12, 0x41, 0x3d,
	0x0d, 0xa9, 0x41, 0xcd, 0xa0, 0xe6, 0x5a, 0x80, 0xb2, 0x1d, 0x1d, 0xe9, 0x87, 0x3d, 0xe5, 0xbc,
	0xfe, 0xb2, 0x66, 0x41, 0xfa, 0x5f, 0xdf, 0xc3, 0xdb, 0x56, 0x47, 0x29, 0xe3, 0xd8, 0xfd, 0xdf,
	0x48, 0x3b, 0x94, 0x28, 0x16, 0x15, 0x59, 0x81, 0x72, 0xb4, 0x5d, 0x10, 0x27, 0xe7, 0x54, 0x21,
	0x17, 0x00, 0x18, 0xd6, 0xb1, 0x36, 0x02, 0x64, 0xb7, 0xf0, 0xc6, 0xd3, 0x74, 0xca, 0x80, 0x36,
	0xb3, 0x3b, 0x51, 0xb9, 0x90, 0xdc, 0xa4, 0xa3, 0x81, 0xd1, 0x68, 0x12, 0xb4, 0x8b, 0x83, 0xec,
	0x5e, 0x34, 0xbc, 0x36, 0x85, 0xb8, 0x98, 0xee, 0xe3, 0xc1, 0xcb, 0x1a, 0x60, 0xce, 0xb1, 0x2c,
	0x0a, 0x76, 0xec, 0xf9, 0x1a, 0x0c, 0x4e, 0x46, 0x53, 0xcb, 0xa5, 0x5d, 0xf0, 0x02, 0x01, 0x7e,
	0x48, 0xb3, 0x2c, 0x67, 0x85, 0x10, 0x7b, 0xba, 0x5c, 0x26, 0x34, 0x80, 0x29, 0xdc, 0x77, 0x1c,
	0xab, 0x61, 0x66, 0x69, 0x0c, 0xa1, 0xe7, 0xcf, 0x8e, 0x72, 0x85, 0x09, 0x97, 0x37, 0x3d, 0x9d,
	0x7a, 0xa0, 0xb3, 0xad, 0x86, 0xef, 0xdc, 0x8f, 0x50, 0x61, 0x22, 0x47, 0xb5, 0x86, 0xb3, 0x90,
	0xdc, 0x1b, 0x96, 0x4a, 0x05, 0x46, 0x65, 0x0c, 0xbc, 0x81, 0x9f, 0x4d, 0xa9, 0x59, 0xb4, 0x23,
	0x5a, 0x2a, 0x12, 0xbf, 0x08, 0xb2, 0x58, 0xac, 0x52, 0xcc, 0x38, 0x9e, 0x49, 0xf5, 0xc1, 0xcf,
	0xa5, 0xa0, 0x36, 0x0f, 0x46, 0x18, 0x26, 0x3e, 0x7e, 0x3e, 0x05, 0x7e, 0xdd, 0x2c, 0xad, 0x45,
	0x66, 0xc1, 0x2f, 0xa4, 0xd4, 0x34, 0xda, 0x18, 0xed, 0xe5, 0x09, 0x75, 0x0e, 0x7e, 0x31, 0xa5,
	0x9e, 0x8e, 0x4e, 0x89, 0x16, 0x2f, 0x02, 0x9d, 0xcb, 0xf5, 0x9c, 0xa6, 0x57, 0x48, 0x31, 0x58,
	0xf0, 0x74, 0xd7, 0xac, 0x31, 0x56, 0x2f, 0xa5, 0x40, 0x0f, 0x1c, 0xa1, 0x68, 0x39, 0xa4, 0x92,
	0xe0, 0x97, 0x53, 0x90, 0xf3, 0xe9, 0x68, 0x79, 0xde, 0xb6, 0x1c, 0x7d, 0x89, 0x55, 0x0a, 0xfc,
	0x4a, 0x4a, 0x3d, 0x15, 0x6d, 0x4f, 0xd8, 0x89, 0xa5, 0x79, 0x35, 0x05, 0x95, 0xee, 0x84, 0x08,
	0x31, 0xa3, 0x41, 0xf4, 0x31, 0x9a, 0xff, 0x4c, 0x41, 0x71, 0x3a, 0xb1, 0x65, 0x3d, 0x3e, 0xf7,
	0x2f, 0xc9, 0x32, 0x13, 0x8e, 0x65, 0x10, 0xfb, 0x18, 0x1d, 0x49, 0x2a, 0x63, 0xae, 0xa3, 0x19,
	0xba, 0xe6, 0xf9, 0xf8, 0x35, 0x49, 0xae, 0xa9, 0xe9, 0xb9, 0x7c, 0xe8, 0x0d, 0xfc, 0x6f, 0x49,
	0x2e, 0x61, 0x27, 0xa6, 0xff, 0x9f, 0x14, 0xf4, 0xa6, 0x8c, 0xa8, 0x2a, 0x75, 0x08, 0x13, 0xed,
	0xf5, 0x14, 0xe4, 0xf2, 0x49, 0x49, 0x5b, 0xf1, 0xe9, 0x37, 0x52, 0xea, 0x1e, 0xb4, 0x33, 0x82,
	0xcc, 0x92, 0xaa, 0xb3, 0x4c, 0x8a, 0xa0, 0x3b, 0x61, 0x4a, 0x94, 0xf2, 0x85, 0x99, 0xd9, 0x42,
	0x6e, 0x74, 0xae, 0x90, 0xc7, 0x6f, 0xa6, 0xd4, 0xff, 0x43, 0x67, 0xb5, 0x43, 0x46, 0x04, 0xc5,
	0x13, 0x6f, 0x49, 0xec, 0x73, 0x30, 0xf7, 0x3a, 0x55, 0x18, 0x47, 0x59, 0xf7, 0x20, 0xab, 0x7e,
	0xe0, 0x12, 0xfc, 0x76, 0x4a, 0x3d, 0x13, 0x9d, 0xde, 0x09, 0x12, 0x4b, 0x7a, 0x99, 0xa2, 0x6e,
	0x47, 0x5b, 0x62, 0x0f, 0x45, 0x7a, 0x70, 0x33, 0x5d, 0xae, 0xa8, 0x27, 0xa1, 0xad, 0x2d, 0x9b,
	0xe1, 0xd1, 0x2b, 0x14, 0xf5, 0x0c, 0x74, 0x6a, 0x43, 0x74, 0xaf, 0xa6, 0xad, 0xd8, 0x10, 0x96,
	0x34, 0x0f, 0x0d, 0x27, 0xf0, 0x79, 0xb9, 0xc2, 0x57, 0x4a, 0x1c, 0xb8, 0x86, 0x94, 0x0e, 0x35,
	0x1c, 0xbe, 0x4a, 0xe2, 0xd0, 0xd8, 0x64, 0x0e, 0xc7, 0x57, 0x2b, 0xa2, 0x13, 0x26, 0xcc, 0xb2,
	0x7f, 0x0c, 0x2e, 0x3d, 0xcc, 0x09, 0xd7, 0x28, 0xa2, 0x15, 0xc4, 0xad, 0x58, 0xbe, 0x6b, 0x15,
	0xd1, 0xfd, 0x10, 0xe8, 0x50, 0x2a, 0x5c, 0x8a, 0xc4, 0xd7, 0x29, 0xa2, 0x7b, 0x84, 0x9d, 0xe8,
	0xec, 0x2c, 0xd1, 0x09, 0x5d, 0xc3, 0x1f, 0x56, 0xc4, 0x30, 0x9c, 0xb7, 0x57, 0x80, 0x09, 0x07,
	0x72, 0x0b, 0x5d, 0xaf, 0xa8, 0xa7, 0xa0, 0xa1, 0xa4, 0xfd, 0x50, 0x88, 0x8f, 0x48, 0x2a, 0x14,
	0xb9, 0x5b, 0x8b, 0x7e, 0xdd, 0x22, 0xf8, 0xa3, 0x32, 0x6d, 0x8f, 0x18, 0x39, 0x4b, 0x33, 0xab,
	0x39, 0x87, 0x8f, 0x02, 0xf8, 0x63, 0x8a, 0x98, 0x1a, 0x45, 0xc7, 0x65, 0x67, 0x3d, 0x7c, 0x83,
	0xa2, 0x0e, 0xa3, 0x33, 0xa2, 0x75, 0xa8, 0x30, 0xcb, 0x8e, 0xb5, 0x0c, 0x75, 0x01, 0x66, 0x16,
	0x7f, 0xd2, 0x84, 0x12, 0x23, 0x04, 0xcb, 0xc7, 0x15, 0xb1, 0x10, 0xf0, 0xa9, 0x26, 0x9c, 0x30,
	0xf0, 0x27, 0x14, 0x31, 0x85, 0xa4, 0xbd, 0x58, 0xfc, 0x4f, 0x4a, 0x32, 0x4a, 0x18, 0xe6, 0xbf,
	0x4f, 0x29, 0xea, 0x2e, 0x74, 0x5a, 0xdb, 0xfd, 0x98, 0xce, 0xa7, 0x15, 0x75, 0x07, 0xda, 0x16,
	0xeb, 0xca, 0x1a, 0x0e, 0xb3, 0x04, 0x94, 0x98, 0xaa, 0x86, 0x3f, 0xa3, 0x88, 0xe5, 0x27, 0xba,
	0xf5, 0xd8, 0xf4, 0xea, 0x07, 0x37, 0x1e, 0xb8, 0xf0, 0xc0, 0x74, 0x50, 0xc1, 0x37, 0x2a, 0x62,
	0xd6, 0xf2, 0x60, 0xe1, 0xc1, 0x1d, 0x05, 0xfe, 0x4d, 0x4a, 0x6b, 0xde, 0x49, 0x88, 0x58, 0xa0,
	0xcf, 0x4a, 0x02, 0x71, 0xe4, 0x94, 0xb6, 0x04, 0xa3, 0xda, 0x94, 0xe6, 0x2e, 0xe1, 0xcf, 0x35,
	0xc5, 0xb6, 0xbc, 0x1d, 0x53, 0xf9, 0xbc, 0xa2, 0xee, 0x44, 0x27, 0xcb, 0xb0, 0x79, 0xdb, 0x04,
	0xf1, 0x59, 0xcd, 0x3d, 0x4c, 0xe7, 0x14, 0xfc, 0x05, 0x45, 0x3d, 0x0b, 0xed, 0xea, 0x0c, 0x8a,
	0x29, 0x7e, 0x51, 0xca, 0x96, 0xa2, 0xb6, 0xba, 0x5a, 0x6f, 0x14, 0xb4, 0x2f, 0x49, 0x41, 0x3f,
	0xa6, 0xe9, 0x4b, 0x35, 0xf8, 0x47, 0x23, 0x03, 0x2e, 0xa5, 0xa6, 0x57, 0x21, 0x06, 0xfe, 0xb2,
	0x64, 0x49, 0x7e, 0x95, 0xa6, 0x86, 0x2e, 0x5c, 0x1a, 0x98, 0xb5, 0x1a, 0x31, 0x8a, 0x3e, 0xad,
	0xcb, 0x37, 0x4b, 0xa9, 0x11, 0x36, 0x47, 0x16, 0x74, 0xb7, 0x48, 0x76, 0xa1, 0x4b, 0xa3, 0xfa,
	0x92, 0xed, 0xac, 0x58, 0xc4, 0x58, 0x04, 0xf2, 0xb7, 0x2a, 0x62, 0x65, 0x99, 0x01, 0xb7, 0x10,
	0xdf, 0x2b, 0xc1, 0x04, 0x0b, 0xe7, 0xf9, 0xaf, 0x71, 0xc7, 0x85, 0x30, 0xf6, 0x3c, 0x7c, 0x9b,
	0x24, 0x49, 0x03, 0xea, 0x4b, 0xdd, 0xeb, 0x76, 0x29, 0x3f, 0x20, 0x98, 0x6b, 0xa0, 0xcd, 0xe8,
	0x02, 0x0c, 0x90, 0xf8, 0xab, 0x92, 0xb6, 0xe2, 0x56, 0x6c, 0xad, 0x3b, 0x14, 0x75, 0x04, 0x9d,
	0xd9, 0x8d, 0x38, 0x70, 0xda, 0xaa, 0xe3, 0xaf, 0x29, 0xcd, 0xa5, 0x9b, 0x55, 0x22, 0xc7, 0x37,
	0xcb, 0xa6, 0xce, 0x2e, 0x70, 0xf8, 0xeb, 0x52, 0x44, 0xe7, 0x2c, 0x13, 0x62, 0x10, 0x9a, 0x79,
	0xcd, 0xd2, 0xea, 0x12, 0xee, 0x1b, 0x92, 0xa1, 0xd8, 0x13, 0x4d, 0xf8, 0x88, 0x31, 0xa3, 0xb9,
	0x3e, 0xfe, 0xa6, 0x64, 0xa8, 0xd2, 0x61, 0x5b, 0x77, 0x09, 0x7d, 0x9f, 0xb8, 0xd0, 0xb4, 0x2c,
	0xfe, 0xca, 0xc1, 0x46, 0xd9, 0x00, 0x9c, 0xf1, 0x2d, 0x29, 0x68, 0x13, 0xa0, 0xb1, 0xba, 0xdf,
	0x96, 0xb2, 0x31, 0x6c, 0x16, 0x02, 0xd3, 0xef, 0x48, 0xd5, 0x68, 0x96, 0xea, 0x1f, 0x6e, 0x17,
	0x75, 0xb8, 0xd4, 0x7a, 0xf8, 0xbb, 0x92, 0xdf, 0x69, 0xa1, 0x22, 0x06, 0x2f, 0x2a, 0xdf, 0x6b,
	0x55, 0x27, 0x9c, 0x94, 0x72, 0x30, 0xc6, 0xe0, 0xef, 0x27, 0x70, 0x16, 0xf7, 0x7f, 0x20, 0x87,
	0x9d, 0x60, 0x0d, 0x90, 0x02, 0x14, 0x65, 0xa3, 0x17, 0xfe, 0xa1, 0x84, 0xe2, 0xb6, 0x0d, 0x93,
	0x9d, 0xa6, 0x15, 0xf1, 0xe9, 0x8d, 0x1b, 0xdf, 0xa9, 0xa8, 0x7b, 0xd1, 0xee, 0x35, 0x50, 0xb1,
	0x4d, 0xee, 0x92, 0x54, 0x62, 0x9c, 0x2f, 0x06, 0x2f, 0x41, 0xed, 0xfe, 0x91, 0x54, 0x2e, 0x84,
	0x9d, 0xf8, 0xec, 0x8f, 0x65, 0xcb, 0xcf, 0xb9, 0x90, 0x4d, 0x3c, 0x33, 0xf9, 0x43, 0x16, 0x74,
	0x21, 0xb7, 0x40, 0x8b, 0x10, 0xfe, 0x89, 0x54, 0x73, 0xc7, 0x03, 0xab, 0x0c, 0xce, 0xc9, 0xd7,
	0x6d, 0x98, 0xef, 0x75, 0x68, 0x16, 0x66, 0x8d, 0xd0, 0x39, 0xd7, 0xb1, 0x29, 0xf6, 0xa7, 0x8a,
	0x7a, 0x10, 0xed, 0xeb, 0x0a, 0x1b, 0x4b, 0xf2, 0x33, 0x49, 0x92, 0x30, 0x49, 0x0a, 0x30, 0x7c,
	0xea, 0x3e, 0x0c, 0x63, 0x3e, 0x04, 0x9d, 0x05, 0xa3, 0x28, 0xf8, 0x13, 0xff, 0x5c, 0x8a, 0x4f,
	0x40, 0x1e, 0xd2, 0x7c, 0x0e, 0x84, 0x0e, 0x72, 0x88, 0x68, 0xc6, 0xb4, 0x6b, 0x2e, 0x9a, 0x36,
	0xfe, 0x85, 0x14, 0x0b, 0x8c, 0x1c, 0x64, 0x3e, 0xe8, 0xae, 0x57, 0x34, 0x77, 0x11, 0xcc, 0x73,
	0xb7, 0xa2, 0xee, 0x46, 0xd9, 0xf6, 0x80, 0x58, 0xb6, 0x7b, 0x5a, 0xed, 0x18, 0x0d, 0x3c, 0xa1,
	0xa5, 0x7f, 0x29, 0x55, 0x4b, 0x86, 0x60, 0x49, 0x07, 0x06, 0xb5, 0xbd, 0x2a, 0xdc, 0xed, 0x38,
	0xec, 0x5e, 0x49, 0x49, 0x06, 0x8b, 0x07, 0xed, 0x62, 0x8d, 0x58, 0xd6, 0x02, 0xf4, 0x8f, 0x19,
	0x0d, 0x66, 0x86, 0xfb, 0x12, 0xaa, 0x33, 0x4d, 0x07, 0x88, 0x29, 0xa2, 0x2d, 0xe1, 0xfb, 0x13,
	0xaa, 0x73, 0x63, 0x3b, 0x16, 0xfc, 0x01, 0x29, 0xdc, 0xe6, 0xc6, 0x81, 0x87, 0x4e, 0x13, 0x98,
	0x4a, 0xde, 0x28, 0xaa, 0xbf, 0x92, 0xdc, 0xd5, 0x29, 0x53, 0x4b, 0xd1, 0x7b, 0x00, 0xfe, 0xb5,
	0x24, 0x40, 0xc2, 0x00, 0x31, 0xc1, 0xa6, 0x87, 0xdf, 0x48, 0x6a, 0x34, 0x95, 0x3e, 0x0f, 0x3f,
	0x28, 0x79, 0xa0, 0xfd, 0x93, 0x03, 0x7e, 0x48, 0x51, 0xf7, 0xa3, 0xe1, 0xb5, 0x81, 0xb1, 0xe6,
	0x0f, 0x4b, 0x49, 0x01, 0x6e, 0x30, 0x60, 0x3e, 0x60, 0x37, 0x8a, 0xc7, 0x07, 0xc4, 0xba, 0x14,
	0xee, 0x80, 0xd2, 0x20, 0x12, 0x78, 0x9f, 0xfe, 0x26, 0xd1, 0x6c, 0xf3, 0xc4, 0x80, 0x18, 0xf3,
	0x6d, 0xa0, 0x21, 0xc3, 0xbf, 0x0e, 0x88, 0x85, 0x35, 0xc2, 0x42, 0xb3, 0x71, 0xfd, 0xf0, 0x25,
	0x0a, 0x3f, 0x39, 0x20, 0x8e, 0x1b, 0x31, 0x84, 0xef, 0xe6, 0x2c, 0x07, 0xe6, 0x1f, 0xfc, 0x54,
	0x22, 0x26, 0xa7, 0xd9, 0x3a, 0xb1, 0x22, 0x3a, 0x4f, 0x0f, 0xa8, 0x07, 0xd0, 0xde, 0x6e, 0x34,
	0x88, 0xa5, 0x7b, 0x5e, 0x52, 0x9a, 0xbf, 0x44, 0x41, 0x00, 0xac, 0xd0, 0x57, 0x8a, 0x71, 0x6d,
	0xd9, 0x71, 0xe1, 0x52, 0xc6, 0x57, 0xf1, 0xdd, 0x1b, 0x44, 0xa5, 0x65, 0xe8, 0x98, 0x05, 0xf5,
	0xc1, 0x82, 0x09, 0x2b, 0xc4, 0xde, 0xb3, 0x41, 0x2c, 0x8a, 0xd1, 0x53, 0x9b, 0xed, 0xc3, 0x5d,
	0x9e, 0xd9, 0xfa, 0x2b, 0x83, 0xe2, 0x74, 0xc0, 0x7c, 0xef, 0x92, 0x65, 0x93, 0xac, 0xe4, 0x2a,
	0x04, 0xda, 0x36, 0x74, 0xe2, 0xc0, 0xc3, 0xb7, 0x0c, 0x8a, 0xf9, 0x2c, 0x80, 0xf8, 0x7e, 0xac,
	0xc3, 0xad, 0x83, 0xcd, 0xf9, 0x1c, 0xe2, 0x22, 0x77, 0xdd, 0x36, 0xd8, 0x9c, 0xcf, 0x32, 0x20,
	0xa6, 0x74, 0xfb, 0xa0, 0x28, 0xb6, 0x00, 0x2c, 0xd0, 0x67, 0x4c, 0xe8, 0xbb, 0x83, 0xa2, 0x09,
	0x5a, 0xf6, 0xa5, 0x2e, 0x78, 0xc7, 0xa0, 0xd8, 0x80, 0x05, 0x2c, 0xcb, 0x31, 0x27, 0x58, 0xac,
	0xf8, 0x72, 0x77, 0x95, 0xb4, 0xc8, 0x93, 0xe5, 0xd2, 0x11, 0x8e, 0x8d, 0xb4, 0x78, 0x64, 0x93,
	0xa8, 0x45, 0x2b, 0x20, 0xd6, 0xe2, 0xd1, 0x4d, 0x72, 0x0a, 0x2e, 0x97, 0xf2, 0x64, 0x21, 0x58,
	0x9c, 0x85, 0x59, 0x86, 0x0e, 0xc2, 0x11, 0xbd, 0xc7, 0x36, 0x49, 0x29, 0x48, 0xdf, 0x76, 0xc3,
	0x07, 0x49, 0xd6, 0x6b, 0xee, 0x4d, 0x8b, 0x54, 0x9a, 0xb7, 0x63, 0x66, 0xf7, 0xa5, 0xa5, 0x00,
	0xa2, 0xb0, 0xe8, 0xfd, 0x9d, 0x06, 0x9e, 0x38, 0x71, 0xdf, 0x9f, 0x16, 0xc3, 0xb3, 0x05, 0x9a,
	0x74, 0xa3, 0x7b, 0x20, 0x2d, 0xdd, 0xf2, 0xc5, 0x23, 0xd1, 0xc7, 0x06, 0xfc, 0xbb, 0xb4, 0x14,
	0x97, 0x49, 0x98, 0x58, 0xda, 0x47, 0xd2, 0x62, 0xc1, 0x96, 0xb0, 0x3c, 0x95, 0xf0, 0xa3, 0x69,
	0xa9, 0xdd, 0xb4, 0x22, 0x62, 0x5a, 0x8f, 0xb5, 0x97, 0xed, 0x68, 0x40, 0xdc, 0xfa, 0xdc, 0xaa,
	0x8d, 0x1f, 0x6c, 0x2f, 0x5b, 0x84, 0x89, 0xe9, 0x3d, 0x94, 0x96, 0x72, 0xa6, 0xd9, 0x3c, 0xf8,
	0xe1, 0xb4, 0xd4, 0xde, 0xda, 0x99, 0x0f, 0xff, 0x56, 0xa2, 0x43, 0x1f, 0x3e, 0xf3, 0xa6, 0xeb,
	0xd7, 0x8b, 0xf9, 0x69, 0xf6, 0x6c, 0x81, 0x7f, 0x2f, 0xd1, 0x89, 0xf7, 0xa3, 0xaa, 0x19, 0xe3,
	0xfe, 0x20, 0xe9, 0x47, 0x71, 0xfc, 0x72, 0x52, 0x3c, 0x3a, 0x79, 0x21, 0xa9, 0x5f, 0xa4, 0x59,
	0x01, 0xc1, 0x7f, 0x94, 0xac, 0x45, 0x31, 0x71, 0xf7, 0xc8, 0x81, 0x30, 0x8e, 0x45, 0x1b, 0x7a,
	0x55, 0xb3, 0x0d, 0xfc, 0xa7, 0xb4, 0x58, 0x06, 0x79, 0x45, 0xb8, 0x88, 0x7f, 0x2d, 0xe0, 0x64,
	0x0d, 0xfc, 0xe7, 0xb4, 0x38, 0xe0, 0xcb, 0x9f, 0xf6, 0xf0, 0x5f, 0xa4, 0x70, 0xa4, 0x9c, 0x8e,
	0x91, 0x85, 0xd1, 0x99, 0xc3, 0x61, 0x91, 0xe7, 0x37, 0x6a, 0x03, 0x3f, 0x2e, 0xb1, 0x09, 0x43,
	0x7d, 0xd4, 0xb6, 0x01, 0xa3, 0xb3, 0xde, 0xe5, 0xe1, 0x27, 0xa4, 0x88, 0x4d, 0x82, 0x34, 0x6a,
	0x77, 0x5a, 0xee, 0xa6, 0x0c, 0x3a, 0x03, 0xed, 0xbb, 0x16, 0x5e, 0x39, 0xd9, 0x2b, 0x35, 0x7e,
	0x52, 0x62, 0xca, 0xc7, 0xb2, 0x26, 0xdd, 0xfe, 0x96, 0x16, 0x6f, 0x3a, 0x9d, 0x3f, 0x9b, 0xe1,
	0xbf, 0xa7, 0xd5, 0xb3, 0xd1, 0x48, 0x77, 0xe0, 0x58, 0xd6, 0x7f, 0x48, 0x6a, 0x75, 0xfa, 0x2e,
	0x86, 0x9f, 0x92, 0x12, 0xb1, 0x9b, 0x4f, 0x68, 0xf8, 0xe9, 0xb4, 0x58, 0xcd, 0xd8, 0xd7, 0x99,
	0x0e, 0x1f, 0x34, 0x3d, 0xfc, 0x8c, 0x14, 0x3c, 0x89, 0xdf, 0x8f, 0xf0, 0xb3, 0x52, 0x72, 0x74,
	0xfc, 0xc8, 0x85, 0x9f, 0x4b, 0x8b, 0xa3, 0x48, 0x57, 0xdf, 0xa3, 0xf0, 0xf3, 0x69, 0xf1, 0x05,
	0xa5, 0xe9, 0x53, 0x13, 0x7e, 0x21, 0x2d, 0x96, 0xbf, 0xe6, 0xef, 0x4d, 0xf8, 0xc5, 0x96, 0x78,
	0x4b, 0xfa, 0x7c, 0x84, 0x5f, 0x4a, 0xab, 0xfb, 0xd0, 0x9e, 0xb5, 0x60, 0x31, 0xd5, 0x97, 0xdb,
	0x53, 0x15, 0xbe, 0x01, 0xe1, 0x57, 0xda, 0x53, 0x4d, 0xf8, 0x54, 0x84, 0x5f, 0x95, 0x82, 0xab,
	0xf3, 0xd7, 0x13, 0xfc, 0xba, 0x14, 0xac, 0x49, 0xdf, 0x45, 0xf0, 0x1b, 0x72, 0xae, 0x26, 0x7c,
	0xe0, 0xc0, 0x6f, 0xa6, 0xc5, 0x01, 0xb2, 0xcd, 0x47, 0x0b, 0xfc, 0x96, 0x94, 0xd1, 0xf2, 0xa3,
	0x37, 0x7e, 0xbb, 0x35, 0xdd, 0xf3, 0x81, 0xbe, 0x34, 0xe7, 0x2c, 0x11, 0x1b, 0x5f, 0x96, 0x11,
	0xe3, 0x27, 0xf1, 0x91, 0x1d, 0x5f, 0x9e, 0x11, 0x8b, 0x4f, 0x87, 0xef, 0x02, 0xf8, 0x8a, 0x8c,
	0xf8, 0x94, 0xd8, 0xc5, 0x17, 0x04, 0xfc, 0x81, 0x8c, 0x18, 0xef, 0x6b, 0x3e, 0xcb, 0xe3, 0x0f,
	0x66, 0xc4, 0x94, 0xea, 0xe6, 0x11, 0x1e, 0x5f, 0x99, 0x11, 0xeb, 0xb0, 0x78, 0x31, 0x64, 0xd9,
	0xc4, 0x6e, 0x08, 0x65, 0xf0, 0xc6, 0x55, 0x19, 0x71, 0x56, 0x4a, 0x7e, 0xb3, 0xc7, 0x57, 0xb7,
	0x82, 0x5a, 0x5e, 0xea, 0xf1, 0x35, 0x19, 0xd1, 0xaf, 0x49, 0x8f, 0xf1, 0xf8, 0xda, 0x4c, 0xeb,
	0x93, 0x24, 0xbf, 0x0c, 0x8f, 0xd5, 0xf1, 0x75, 0x99, 0xd6, 0x37, 0x9d, 0x68, 0x33, 0x56, 0xeb,
	0x43, 0x99, 0xe1, 0x9b, 0x7a, 0xd1, 0xc6, 0xc2, 0x04, 0xff, 0x4a, 0x1f, 0x7e, 0x91, 0xd9, 0x82,
	0x54, 0x38, 0x27, 0xad, 0x4d, 0x5f, 0x88, 0x8f, 0x53, 0x87, 0x18, 0x33, 0x69, 0x3d, 0x4f, 0x6c,
	0x13, 0xc2, 0xa3, 0x07, 0xc6, 0xa1, 0xed, 0xcd, 0x7b, 0x3c, 0xfe, 0x0b, 0xae, 0xeb, 0xb8, 0xb8,
	0x17, 0x24, 0xdd, 0xda, 0x0c, 0x98, 0x33, 0xab, 0xc4, 0x09, 0x7c, 0xdc, 0x97, 0xb4, 0x79, 0xd8,
	0x5e, 0x86, 0xda, 0x69, 0xe0, 0x75, 0x49, 0x9b, 0x47, 0x9c, 0x29, 0xcd, 0xd7, 0x2b, 0xb8, 0x1f,
	0x26, 0x84, 0x93, 0x9a, 0x37, 0xe7, 0x6d, 0xfa, 0xd2, 0x63, 0x73, 0xc6, 0xeb, 0x93, 0x24, 0x83,
	0x59, 0x6e, 0xd2, 0x59, 0x84, 0x16, 0x34, 0x6d, 0xe3, 0x94, 0xa8, 0xd6, 0xb8, 0x66, 0x5a, 0xc4,
	0x98, 0x73, 0x72, 0x70, 0x01, 0xf3, 0x09, 0x56, 0x86, 0x6f, 0xe8, 0x45, 0x1b, 0x0a, 0xfc, 0xc1,
	0x9f, 0xbd, 0x76, 0x72, 0x61, 0x84, 0x85, 0x52, 0x31, 0xd0, 0x75, 0x42, 0x0c, 0x30, 0xc2, 0x71,
	0x9c, 0x95, 0xb8, 0xc9, 0xe9, 0x41, 0x8e, 0xd1, 0x59, 0x1e, 0xac, 0xb4, 0x93, 0xa6, 0x61, 0x02,
	0x00, 0xa6, 0x15, 0x7f, 0xb4, 0x5c, 0x76, 0x5c, 0x03, 0x2c, 0xd5, 0x09, 0x44, 0x3b, 0xb4, 0x49,
	0x2d, 0xb6, 0x8b, 0x4e, 0x97, 0x6d, 0x40, 0x93, 0xf4, 0xf3, 0x04, 0x1b, 0x0b, 0xd6, 0x41, 0x9b,
	0x39, 0x63, 0x0d, 0x8e, 0xfc, 0x5e, 0x08, 0xa6, 0xec, 0x44, 0x92, 0x43, 0x27, 0x48, 0x15, 0xaf,
	0x1f, 0x7e, 0xad, 0x17, 0x9d, 0x52, 0x90, 0x1a, 0x51, 0x3c, 0x0d, 0x46, 0x0d, 0x0f, 0xf2, 0x11,
	0xee, 0x79, 0x9d, 0x31, 0x92, 0xe5, 0xce, 0x41, 0x07, 0xd7, 0xc4, 0x87, 0xe2, 0xc0, 0xcd, 0x36,
	0x2c, 0x2e, 0x60, 0xd0, 0xf7, 0xa0, 0x77, 0x75, 0x7d, 0x8e, 0xe6, 0x3e, 0x78, 0xfe, 0xb0, 0x1d,
	0x63, 0xc1, 0xd8, 0xe7, 0xa3, 0x77, 0x76, 0x4b, 0x00, 0x32, 0xdd, 0x32, 0x80, 0x00, 0xac, 0x87,
	0xaf, 0x4d, 0x7d, 0xea, 0x3b, 0xd0, 0x81, 0x6e, 0x8f, 0x1f, 0x71, 0x8a, 0xd3, 0x91, 0x57, 0x0e,
	0xd0, 0xf6, 0xb8, 0xc6, 0xb1, 0xe8, 0x5d, 0x74, 0x3c, 0xb0, 0x2c, 0xdc, 0x3f, 0xfc, 0x4c, 0x2f,
	0xda, 0xd1, 0xc6, 0xea, 0x7c, 0x0c, 0x50, 0xf7, 0xd2, 0x2e, 0xd4, 0x09, 0x21, 0x59, 0xfc, 0xdd,
	0xe8, 0xdc, 0x35, 0xd0, 0x82, 0xdd, 0x9a, 0xcc, 0xd6, 0xa3, 0x9e, 0x87, 0xce, 0xe9, 0xee, 0x74,
	0xb3, 0xd1, 0xc0, 0xe4, 0x67, 0xa3, 0xfd, 0xdd, 0x9d, 0x6d, 0x58, 0xac, 0x0f, 0x06, 0x8a, 0x91,
	0x6e, 0x0f, 0xe5, 0x89, 0x0f, 0x7f, 0x82, 0x95, 0x3b, 0x38, 0xa7, 0xe9, 0x0c, 0x59, 0x75, 0x6c,
	0x3e, 0xa2, 0xe2, 0xfe, 0xb1, 0xfe, 0x43, 0x3d, 0x97, 0xf5, 0x1c, 0xf7, 0xdf, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xfd, 0x1b, 0xe7, 0xaa, 0xe2, 0x26, 0x00, 0x00,
}
